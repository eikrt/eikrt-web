(undo-tree-save-format-version . 1)
"b9ca9bcca40cbf73fffd61940d2572d73be022ec"
[nil nil nil nil (25214 38563 759896 3000) 0 nil]
([nil nil ((#("j" 0 1 (fontified t)) . -1156) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (1156 . 1157) (1154 . 1156) (nil rear-nonsticky nil 1139 . 1140) (641 . 1140) (634 . 641) (t 25214 17102 198138 309000)) nil (25214 38563 759894 853000) 0 nil])
([nil nil ((#("			<div key={ddindex}>
" 0 13 (fontified t) 13 15 (fontified t help-echo "Undeclared variable or function 'ddindex'" cursor-sensor-functions (js2-echo-error)) 15 20 (fontified t help-echo "Undeclared variable or function 'ddindex'" cursor-sensor-functions (js2-echo-error)) 20 23 (fontified t)) . 1141) (undo-tree-id66 . -14) (undo-tree-id67 . -14) (undo-tree-id68 . -13) (undo-tree-id69 . -13) (undo-tree-id70 . 8) 1155) nil (25214 38563 759892 747000) 0 nil])
([nil nil ((#("			{post.map((p,index) => {
" 0 9 (fontified t) 9 12 (fontified t font-lock-face js2-function-call) 12 14 (fontified t) 14 15 (fontified t font-lock-face js2-function-param) 15 16 (fontified t) 16 21 (fontified t font-lock-face js2-function-param) 21 27 (fontified t) 27 28 (fontified t)) . 1141) (undo-tree-id63 . -14) (undo-tree-id64 . -14) (undo-tree-id65 . 28) 1155) nil (25214 38563 759889 873000) 0 nil])
([nil nil ((#("			    return (
" 0 7 (fontified t) 7 13 (fontified t font-lock-face font-lock-keyword-face) 13 15 (fontified t) 15 16 (fontified t)) . 1141) (undo-tree-id60 . -14) (undo-tree-id61 . -14) (undo-tree-id62 . 16) 1155) nil (25214 38563 759886 435000) 0 nil])
([nil nil ((#("				    <div key={index}>
" 0 25 (fontified t) 25 26 (fontified t)) . 1141) (undo-tree-id57 . -7) (undo-tree-id58 . -7) (undo-tree-id59 . 26) 1148) nil (25214 38563 759884 959000) 0 nil])
([nil nil ((#("				    <h2>{p.title}</h2>
" 0 15 (fontified t) 15 20 (fontified t font-lock-face js2-object-property-access) 20 26 (fontified t) 26 27 (fontified t)) . 1141) (undo-tree-id54 . -7) (undo-tree-id55 . -7) (undo-tree-id56 . 27) 1148) nil (25214 38563 759882 800000) 0 nil])
([nil nil ((#("				    <pre>{p.body}</pre>
" 0 16 (fontified t) 16 20 (fontified t font-lock-face js2-object-property-access) 20 27 (fontified t) 27 28 (fontified t)) . 1141) (undo-tree-id51 . -7) (undo-tree-id52 . -7) (undo-tree-id53 . 28) 1148) nil (25214 38563 759879 623000) 0 nil])
([nil nil ((#("				    </div>
" 0 14 (fontified t) 14 15 (fontified t)) . 1141) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . 15) 1148) nil (25214 38563 759878 80000) 0 nil])
([nil nil ((#("			    );
" 0 9 (fontified t) 9 10 (fontified t)) . 1141) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . 10) 1149) nil (25214 38563 759876 484000) 0 nil])
([nil nil ((#("		})}
" 0 2 (fontified t) 2 3 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error)) 3 4 (fontified t help-echo "missing ; after for-loop initializer" cursor-sensor-functions (js2-echo-error)) 4 5 (fontified t help-echo "missing ; after for-loop condition" cursor-sensor-functions (js2-echo-error)) 5 6 (fontified t)) . 1141) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . 6) (undo-tree-id43 . 2) (undo-tree-id44 . -5) 1145) nil (25214 38563 759874 697000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -653) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (653 . 654) (645 . 653) (646 . 650) (#("7" 0 1 (fontified t)) . -646) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 647 (642 . 647) (#("g" 0 1 (fontified t)) . -642) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("h" 0 1 (fontified t)) . -643) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("2" 0 1 (fontified t)) . -644) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 645 (641 . 645) (634 . 641) (#("A" 0 1 (fontified t)) . -646) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("b" 0 1 (fontified t)) . -647) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("o" 0 1 (fontified t)) . -648) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("u" 0 1 (fontified t)) . -649) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 650 (#("t" 0 1 (fontified t)) . -650) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t)) . -651) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("m" 0 1 (fontified t)) . -652) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("e" 0 1 (fontified t)) . -653) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 654 (1146 . 1148) (643 . 645) (#("
" 0 1 (fontified t)) . -652) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 653 (1142 . 1146) (641 . 644) (#("*" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -641) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 642) nil (25214 38563 759867 775000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -646) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (646 . 647) (641 . 646) (634 . 641) (t 25214 38563 763882 225000)) nil (25214 38576 774434 279000) 0 nil])
([nil nil ((#("	    {posts.map((post,index) => {
" 0 12 (fontified t) 12 15 (fontified t font-lock-face js2-function-call) 15 17 (fontified t) 17 21 (fontified t font-lock-face js2-function-param) 21 22 (fontified t) 22 27 (fontified t font-lock-face js2-function-param) 27 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t)) . 591) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . 29) (undo-tree-id82 . -6) 596 (t 25214 38576 779919 407000)) nil (25214 38588 846207 521000) 0 nil])
([nil nil ((#("	    })}
" 0 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 1158) (undo-tree-id75 . -7) (undo-tree-id76 . -7) (undo-tree-id77 . 2) (undo-tree-id78 . -8) 1165) nil (25214 38588 846201 465000) 0 nil])
([nil nil ((#("    const [posts, setPosts] = useState([])
" 0 4 (fontified t) 4 9 (fontified t font-lock-face font-lock-keyword-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 9 11 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 11 16 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 16 18 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 18 26 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 26 30 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 30 38 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 38 42 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 42 43 (fontified t)) . 237) (undo-tree-id113 . -22) (undo-tree-id114 . -22) (undo-tree-id115 . -4) (undo-tree-id116 . -42) (undo-tree-id117 . -22) (undo-tree-id118 . -22) (undo-tree-id119 . -22) 259 (t 25214 38588 859953 900000)) nil (25214 38594 341522 286000) 0 nil])
([nil nil ((#("    useEffect(() => {
" 0 4 (fontified t) 4 13 (fontified t font-lock-face js2-function-call) 13 21 (fontified t) 21 22 (fontified t)) . 237) (undo-tree-id109 . -20) (undo-tree-id110 . -20) (undo-tree-id111 . -21) (undo-tree-id112 . -20) 257) nil (25214 38594 341519 159000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 237)) nil (25214 38594 341516 874000) 0 nil])
([nil nil ((#("	axios.get(\"http://localhost:8080/blogposts/about\").then(res => {
" 0 7 (fontified t) 7 10 (fontified t font-lock-face js2-function-call) 10 11 (fontified t) 11 50 (fontified t font-lock-face font-lock-string-face) 50 52 (fontified t) 52 56 (fontified t font-lock-face js2-function-call) 56 57 (fontified t) 57 60 (fontified t font-lock-face js2-function-param) 60 65 (fontified t) 65 66 (fontified t)) . 237) (undo-tree-id108 . -65)) nil (25214 38594 341516 232000) 0 nil])
([nil nil ((#("	    console.log(res.data)
" 0 5 (fontified t) 5 13 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 13 16 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 16 21 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 21 25 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 25 26 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 26 27 (fontified t)) . 237) (undo-tree-id105 . -5) (undo-tree-id106 . -26) (undo-tree-id107 . -26)) nil (25214 38594 341514 989000) 0 nil])
([nil nil ((#("	    setPosts([...posts, res.data])
" 0 5 (fontified t) 5 13 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 13 29 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 29 33 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 33 35 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 35 36 (fontified t)) . 237) (undo-tree-id102 . -5) (undo-tree-id103 . -35) (undo-tree-id104 . -35)) nil (25214 38594 341512 824000) 0 nil])
([nil nil ((#("	}).catch((error) => {
" 0 4 (fontified t) 4 9 (fontified t font-lock-face js2-function-call) 9 11 (fontified t) 11 16 (fontified t font-lock-face js2-function-param) 16 22 (fontified t) 22 23 (fontified t)) . 237) (undo-tree-id101 . -22)) nil (25214 38594 341510 746000) 0 nil])
([nil nil ((#("	    console.log(error)
" 0 5 (fontified t) 5 13 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 13 16 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 16 23 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 23 24 (fontified t)) . 237) (undo-tree-id98 . -5) (undo-tree-id99 . -23) (undo-tree-id100 . -23)) nil (25214 38594 341509 296000) 0 nil])
([nil nil ((#("	});
" 0 4 (fontified t) 4 5 (fontified t)) . 237) (undo-tree-id96 . -5) (undo-tree-id97 . -4)) nil (25214 38594 341506 688000) 0 nil])
([nil current ((#("    },[])
" 0 5 (fontified t) 5 6 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error)) 6 7 (fontified t) 7 8 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error)) 8 9 (fontified t help-echo "missing ] in index expression" cursor-sensor-functions (js2-echo-error)) 9 10 (fontified t)) . 237) (undo-tree-id83 . -9) (undo-tree-id84 . -8) (undo-tree-id85 . -9) (undo-tree-id86 . -8) (undo-tree-id87 . -9) (undo-tree-id88 . -8) (undo-tree-id89 . -9) (undo-tree-id90 . -8) (undo-tree-id91 . -9) (undo-tree-id92 . -7) (undo-tree-id93 . -8) (undo-tree-id94 . -5) (undo-tree-id95 . -6)) nil (25214 38594 341490 487000) 0 nil])
nil
