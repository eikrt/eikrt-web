(undo-tree-save-format-version . 1)
"1a4040e534c5a158cb9d435a186ee9cbbcefeedf"
[nil nil nil nil (25214 47295 919503 155000) 0 nil]
([nil nil ((#("j" 0 1 (part-side javascript)) . -394) (undo-tree-id0 . -1) (394 . 395) (390 . 394) (#("j" 0 1 (part-side javascript)) . -390) (undo-tree-id1 . -1) (#("d" 0 1 (part-side javascript)) . -391) (undo-tree-id2 . -1) (#("a" 0 1 (part-side javascript)) . -392) (undo-tree-id3 . -1) 393 (391 . 393) (#("a" 0 1 (part-side javascript)) . -391) (undo-tree-id4 . -1) (#("d" 0 1 (part-side javascript)) . -392) (undo-tree-id5 . -1) 393 (391 . 393) (390 . 391) (389 . 390) (386 . 389) (#("r" 0 1 (part-side javascript)) . -386) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("e" 0 1 (part-side javascript)) . -387) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("s" 0 1 (part-side javascript)) . -388) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("." 0 1 (part-side javascript)) . -389) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("d" 0 1 (part-side javascript)) . -390) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("a" 0 1 (part-side javascript)) . -391) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("t" 0 1 (part-side javascript)) . -392) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("a" 0 1 (part-side javascript)) . -393) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 394 (t 25214 41143 565735 516000)) nil (25214 47295 919498 876000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (9 . 10) (#("	" 0 1 (fontified t)) . -777) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t)) . -778) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 779 (#("	" 0 1 (fontified t)) . -736) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -737) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 738 (#("	" 0 1 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . -769) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . -770) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 771 (#("	" 0 1 (fontified t)) . -762) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -763) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 764 (#("	" 0 1 (fontified t)) . -737) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -738) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 739 (#("	" 0 1 (fontified t)) . -729) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t)) . -730) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 731 (#("	" 0 1 (fontified t)) . -740) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t)) . -741) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 742 (#("	" 0 1 (fontified t)) . -730) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t)) . -731) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 732 (#("	" 0 1 (fontified t)) . -709) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t)) . -710) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 711 (#("	" 0 1 (fontified t)) . -733) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#(" " 0 1 (fontified t)) . -734) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 735 (#("	" 0 1 (fontified t)) . -710) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t)) . -711) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 712 (#("	" 0 1 (fontified t)) . -690) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(" " 0 1 (fontified t)) . -691) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(" " 0 1 (fontified t)) . -692) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 693 (#(" " 0 1 (fontified t)) . -661) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 662 (#(" " 0 1 (fontified t)) . -661) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 662 (#("	" 0 1 (fontified t)) . -661) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("	" 0 1 (fontified t)) . -662) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#(" " 0 1 (fontified t)) . -663) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 664 (#("	" 0 1 (fontified t)) . -675) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#(" " 0 1 (fontified t)) . -676) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 677 (#("	" 0 1 (fontified t)) . -676) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("	" 0 1 (fontified t)) . -677) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(" " 0 1 (fontified t)) . -678) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 679 (#("	" 0 1 (fontified t)) . -701) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#(" " 0 1 (fontified t)) . -702) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 703 (#("	" 0 1 (fontified t)) . -726) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#(" " 0 1 (fontified t)) . -727) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 728 (#("	" 0 1 (fontified t)) . -753) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#(" " 0 1 (fontified t)) . -754) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) 755 (#("	" 0 1 (fontified t)) . -727) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#(" " 0 1 (fontified t)) . -728) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 729 (#("	" 0 1 (fontified t)) . -702) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#(" " 0 1 (fontified t)) . -703) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 704 (#("	" 0 1 (fontified t)) . -678) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#(" " 0 1 (fontified t)) . -679) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 680 (#("	" 0 1 (fontified t)) . -663) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -664) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) 665 (#("	" 0 1 (fontified t)) . -570) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#(" " 0 1 (fontified t)) . -571) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 572 (#("	" 0 1 (fontified t)) . -524) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#(" " 0 1 (fontified t)) . -525) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 526 (#("	" 0 1 (fontified t)) . -511) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#(" " 0 1 (fontified t)) . -512) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 513 (#("	" 0 1 (fontified t)) . -499) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t)) . -500) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 501 (#("	" 0 1 (fontified t)) . -369) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#(" " 0 1 (fontified t)) . -370) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#(" " 0 1 (fontified t)) . -371) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#(" " 0 1 (fontified t)) . -372) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#(" " 0 1 (fontified t)) . -373) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 374 (#("	" 0 1 (fontified t)) . -396) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 397 (#(" " 0 1 (fontified t)) . -397) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#(" " 0 1 (fontified t)) . -398) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#(" " 0 1 (fontified t)) . -399) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t)) . -400) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 401 (#("	" 0 1 (fontified t)) . -455) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#(" " 0 1 (fontified t)) . -456) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 457 (#(" " 0 1 (fontified t)) . -457) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#(" " 0 1 (fontified t)) . -458) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#(" " 0 1 (fontified t)) . -459) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) 460 (369 . 374) (#("	" 0 1 (fontified t)) . -369) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#(" " 0 1 (fontified t)) . -370) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 371 (393 . 398) (#("	" 0 1 (fontified t)) . -393) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#(" " 0 1 (fontified t)) . -394) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) 395 (449 . 454) (#("	" 0 1 (fontified t)) . -449) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#(" " 0 1 (fontified t)) . -450) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#(" " 0 1 (fontified t)) . -451) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (#(" " 0 1 (fontified t)) . -452) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#(" " 0 1 (fontified t)) . -453) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 454 (#(" " 0 1 (fontified t)) . -395) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#(" " 0 1 (fontified t)) . -396) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#(" " 0 1 (fontified t)) . -397) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) 398 (#(" " 0 1 (fontified t)) . -371) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t)) . -372) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t)) . -373) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) 374 (t 25214 47295 941172 997000)) nil (25214 59277 914978 637000) 0 nil])
([nil nil ((#("import Head from 'next/head'
" 0 6 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-keyword-face fontified t) 6 7 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 7 11 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-variable-name-face fontified t) 11 12 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 12 16 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-keyword-face fontified t) 16 17 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 17 28 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-string-face fontified t) 28 29 (fontified t)) . 45) (undo-tree-id0 . -15) (undo-tree-id1 . -15) (undo-tree-id2 . -15) (undo-tree-id3 . -7) (undo-tree-id4 . -11) (undo-tree-id5 . -15) 60 (t 25214 59277 914320 741000)) nil (25217 2002 889266 90000) 0 nil])
([nil nil ((304 . 307) (293 . 304) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -293) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -294) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("k" 0 1 (fontified t font-lock-face font-lock-string-face)) . -295) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("r" 0 1 (fontified t font-lock-face font-lock-string-face)) . -296) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 297 (290 . 297) (#(":" 0 1 (fontified t font-lock-face font-lock-string-face)) . -290) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -291) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -292) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -293) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -294) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("k" 0 1 (fontified t font-lock-face font-lock-string-face)) . -295) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("r" 0 1 (fontified t font-lock-face font-lock-string-face)) . -296) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -297) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("." 0 1 (fontified t font-lock-face font-lock-string-face)) . -298) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 299 (293 . 299) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -293) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 294 (293 . 294) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -293) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -294) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("c" 0 1 (fontified t font-lock-face font-lock-string-face)) . -295) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face)) . -296) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -297) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("h" 0 1 (fontified t font-lock-face font-lock-string-face)) . -298) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -299) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -300) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -301) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#(":" 0 1 (fontified t font-lock-face font-lock-string-face)) . -302) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("8" 0 1 (fontified t font-lock-face font-lock-string-face)) . -303) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -304) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("8" 0 1 (fontified t font-lock-face font-lock-string-face)) . -305) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -306) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 307 (t 25215 32557 849107 911000)) nil (25217 3181 256287 406000) 0 nil] [nil nil ((865 . 869) (823 . 828) (#("   " 0 3 (fontified t)) . 823) (815 . 816) (#("   " 0 3 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . 815) (806 . 811) (#("   " 0 3 (fontified t)) . 806) (790 . 794) (783 . 784) (771 . 778) (#(" " 0 1 (fontified t)) . 771) (756 . 764) (728 . 736) (702 . 709) (675 . 683) (#(" " 0 1 (fontified t)) . 675) (659 . 666) (566 . 571) (#("   " 0 3 (fontified t)) . 566) (518 . 523) (#("   " 0 3 (fontified t)) . 518) (503 . 508) (#("   " 0 3 (fontified t)) . 503) (489 . 494) (#("   " 0 3 (fontified t)) . 489) (479 . 483) (426 . 431) (367 . 372) (340 . 345) 803 (t 25215 32557 849107 911000)) ((#("	    " 0 5 (fontified t)) . 340) (undo-tree-id0 . -5) (undo-tree-id1 . -2) (#("	    " 0 5 (fontified t)) . 367) (undo-tree-id2 . -5) (undo-tree-id3 . -2) (#("	    " 0 5 (fontified t)) . 426) (undo-tree-id4 . -5) (undo-tree-id5 . -2) (#("    " 0 4 (fontified t)) . 479) (undo-tree-id6 . -1) (489 . 492) (#("	    " 0 5 (fontified t)) . 489) (undo-tree-id7 . -2) (503 . 506) (#("	    " 0 5 (fontified t)) . 503) (undo-tree-id8 . -2) (518 . 521) (#("	    " 0 5 (fontified t)) . 518) (undo-tree-id9 . -2) (566 . 569) (#("	    " 0 5 (fontified t)) . 566) (undo-tree-id10 . -2) (#("			    " 0 7 (fontified t)) . 659) (undo-tree-id11 . -2) (undo-tree-id12 . -4) (675 . 676) (#("				    " 0 8 (fontified t)) . 675) (undo-tree-id13 . -3) (undo-tree-id14 . -5) (#("			    " 0 7 (fontified t)) . 702) (undo-tree-id15 . -2) (undo-tree-id16 . -4) (#("				    " 0 8 (fontified t)) . 728) (undo-tree-id17 . -3) (undo-tree-id18 . -5) (#("				    " 0 8 (fontified t)) . 756) (undo-tree-id19 . -3) (undo-tree-id20 . -5) (771 . 772) (#("			    " 0 7 (fontified t)) . 771) (undo-tree-id21 . -2) (undo-tree-id22 . -4) (#("	" 0 1 (fontified t)) . 783) (#("    " 0 4 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . 790) (undo-tree-id23 . -1) (806 . 809) (#("	    " 0 5 (fontified t)) . 806) (undo-tree-id24 . -2) (815 . 818) (#("	" 0 1 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . 815) (823 . 826) (#("	    " 0 5 (fontified t)) . 823) (undo-tree-id25 . -2) (#("    " 0 4 (fontified t help-echo "Code has no side effects" cursor-sensor-functions (js2-echo-error))) . 865) (undo-tree-id26 . -1)) (25217 2002 888164 92000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 343) (327 . 344) (326 . 328) (#("{" 0 1 (fontified nil)) . 326) (324 . 327) (#(" " 0 1 (fontified nil)) . 324) (324 . 325)) ((#(" " 0 1 (fontified nil)) . 324) (324 . 325) (#(", {" 0 2 (fontified nil) 2 3 (fontified nil)) . 324) (326 . 327) (#("{}" 0 1 (fontified nil) 1 2 (fontified nil)) . 326) (#("crossdomain:true" 0 11 (fontified nil font-lock-face js2-object-property) 11 12 (fontified nil) 12 16 (fontified nil font-lock-face font-lock-constant-face)) . 327) (#("j" 0 1 (fontified nil)) . 343) (343 . 344)) (25217 3182 285197 207000) 0 nil])
nil
([nil nil ((300 . 305) (#("/80" 0 1 (fontified nil font-lock-face font-lock-string-face) 1 2 (fontified nil font-lock-face font-lock-string-face) 2 3 (fontified nil font-lock-face font-lock-string-face)) . 300) (294 . 303) (#("cal" 0 1 (fontified nil font-lock-face font-lock-string-face) 1 2 (fontified nil font-lock-face font-lock-string-face) 2 3 (fontified nil font-lock-face font-lock-string-face)) . 294) (294 . 297) (#("la" 0 1 (fontified nil font-lock-face font-lock-string-face) 1 2 (fontified nil font-lock-face font-lock-string-face)) . 294) (286 . 296) (#("https://eikrt.com/api" 0 1 (fontified t font-lock-face font-lock-string-face) 1 2 (fontified t font-lock-face font-lock-string-face) 2 3 (fontified t font-lock-face font-lock-string-face) 3 4 (fontified t font-lock-face font-lock-string-face) 4 5 (fontified t font-lock-face font-lock-string-face) 5 6 (fontified t font-lock-face font-lock-string-face) 6 7 (fontified t font-lock-face font-lock-string-face) 7 8 (fontified t font-lock-face font-lock-string-face) 8 9 (fontified t font-lock-face font-lock-string-face) 9 10 (fontified t font-lock-face font-lock-string-face) 10 11 (fontified t font-lock-face font-lock-string-face) 11 12 (fontified t font-lock-face font-lock-string-face) 12 13 (fontified t font-lock-face font-lock-string-face) 13 14 (fontified t font-lock-face font-lock-string-face) 14 15 (fontified t font-lock-face font-lock-string-face) 15 16 (fontified t font-lock-face font-lock-string-face) 16 17 (fontified t font-lock-face font-lock-string-face) 17 18 (fontified t font-lock-face font-lock-string-face) 18 19 (fontified t font-lock-face font-lock-string-face) 19 20 (fontified t font-lock-face font-lock-string-face) 20 21 (fontified t font-lock-face font-lock-string-face)) . 286)) ((286 . 307) (#("http:locla" 0 8 (fontified nil font-lock-face font-lock-string-face) 8 9 (fontified nil font-lock-face font-lock-string-face) 9 10 (fontified nil font-lock-face font-lock-string-face)) . 286) (undo-tree-id152 . 5) (294 . 296) (#("c" 0 1 (fontified nil font-lock-face font-lock-string-face)) . 294) (#("al" 0 1 (fontified nil font-lock-face font-lock-string-face) 1 2 (fontified nil font-lock-face font-lock-string-face)) . 295) (294 . 297) (#("alhost/80" 0 6 (fontified nil font-lock-face font-lock-string-face) 6 7 (fontified nil font-lock-face font-lock-string-face) 7 8 (fontified nil font-lock-face font-lock-string-face) 8 9 (fontified nil font-lock-face font-lock-string-face)) . 294) (300 . 303) (#(":8080" 0 5 (fontified t font-lock-face font-lock-string-face)) . 300)) (25217 3182 472918 607000) 0 nil])
([nil nil ((291 . 293)) ((#("//" 0 2 (fontified t font-lock-face font-lock-string-face)) . 291) (t 25217 2802 681726 610000)) (25217 3182 972899 396000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -277) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (277 . 278) (275 . 277) (t 25217 2802 681726 610000)) nil (25217 3204 295990 627000) 0 nil])
([nil nil ((nil rear-nonsticky nil 362 . 363) (#("
" 0 1 (fontified nil)) . -449) (361 . 450) 276) nil (25217 3204 295987 948000) 0 nil])
([nil nil ((394 . 395) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -394) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -395) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 396 (391 . 396) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -391) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) 392 (379 . 392) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -379) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 380 (378 . 380) (#(":" 0 1 (fontified t font-lock-face font-lock-string-face)) . -378) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -379) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 380 (379 . 380) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -379) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -380) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -381) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -382) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("c" 0 1 (fontified t font-lock-face font-lock-string-face)) . -383) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face)) . -384) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -385) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("h" 0 1 (fontified t font-lock-face font-lock-string-face)) . -386) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -387) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -388) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -389) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#(":" 0 1 (fontified t font-lock-face font-lock-string-face)) . -390) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("8" 0 1 (fontified t font-lock-face font-lock-string-face)) . -391) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -392) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("8" 0 1 (fontified t font-lock-face font-lock-string-face)) . -393) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -394) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 395 (#("/" 0 1 (fontified t font-lock-face font-lock-string-face syntax-table (7 . 47) help-echo "Code has no side effects" cursor-sensor-functions (js2-echo-error))) . -363) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 364 (#("/" 0 1 (fontified t font-lock-face font-lock-comment-face)) . -363) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 364) nil (25217 3204 295980 674000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -412) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (412 . 413) (#("," 0 1 (fontified t)) . -412) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#(" " 0 1 (fontified t)) . -413) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("{" 0 1 (fontified t)) . -414) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("c" 0 1 (fontified t font-lock-face js2-object-property)) . -415) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("r" 0 1 (fontified t font-lock-face js2-object-property)) . -416) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (#("o" 0 1 (fontified t font-lock-face js2-object-property)) . -417) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("s" 0 1 (fontified t font-lock-face js2-object-property)) . -418) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("s" 0 1 (fontified t font-lock-face js2-object-property)) . -419) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("d" 0 1 (fontified t font-lock-face js2-object-property)) . -420) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("o" 0 1 (fontified t font-lock-face js2-object-property)) . -421) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("m" 0 1 (fontified t font-lock-face js2-object-property)) . -422) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("a" 0 1 (fontified t font-lock-face js2-object-property)) . -423) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("i" 0 1 (fontified t font-lock-face js2-object-property)) . -424) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (#("n" 0 1 (fontified t font-lock-face js2-object-property)) . -425) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#(":" 0 1 (fontified t)) . -426) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-constant-face)) . -427) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#("r" 0 1 (fontified t font-lock-face font-lock-constant-face)) . -428) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("u" 0 1 (fontified t font-lock-face font-lock-constant-face)) . -429) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-constant-face)) . -430) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("}" 0 1 (fontified t)) . -431) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) 432 (t 25217 3204 299573 368000)) nil (25217 3210 216567 398000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -412) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (412 . 413) (411 . 412) (t 25217 3210 219598 159000)) nil (25217 3221 96261 150000) 0 nil])
([nil current ((#("j" 0 1 (fontified t)) . -411) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (411 . 412) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -411) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) 412 (t 25217 3221 107643 518000)) nil (25217 3227 910825 156000) 0 nil])
nil
