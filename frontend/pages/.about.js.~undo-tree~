(undo-tree-save-format-version . 1)
"278798b27c4f1e4fd050e60bc7236bd01278b791"
[nil nil nil nil (25214 47295 919503 155000) 0 nil]
([nil nil ((#("j" 0 1 (part-side javascript)) . -394) (undo-tree-id0 . -1) (394 . 395) (390 . 394) (#("j" 0 1 (part-side javascript)) . -390) (undo-tree-id1 . -1) (#("d" 0 1 (part-side javascript)) . -391) (undo-tree-id2 . -1) (#("a" 0 1 (part-side javascript)) . -392) (undo-tree-id3 . -1) 393 (391 . 393) (#("a" 0 1 (part-side javascript)) . -391) (undo-tree-id4 . -1) (#("d" 0 1 (part-side javascript)) . -392) (undo-tree-id5 . -1) 393 (391 . 393) (390 . 391) (389 . 390) (386 . 389) (#("r" 0 1 (part-side javascript)) . -386) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("e" 0 1 (part-side javascript)) . -387) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("s" 0 1 (part-side javascript)) . -388) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("." 0 1 (part-side javascript)) . -389) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("d" 0 1 (part-side javascript)) . -390) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("a" 0 1 (part-side javascript)) . -391) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("t" 0 1 (part-side javascript)) . -392) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("a" 0 1 (part-side javascript)) . -393) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 394 (t 25214 41143 565735 516000)) nil (25214 47295 919498 876000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -9) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (9 . 10) (#("	" 0 1 (fontified t)) . -777) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t)) . -778) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 779 (#("	" 0 1 (fontified t)) . -736) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -737) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 738 (#("	" 0 1 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . -769) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . -770) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 771 (#("	" 0 1 (fontified t)) . -762) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -763) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 764 (#("	" 0 1 (fontified t)) . -737) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -738) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 739 (#("	" 0 1 (fontified t)) . -729) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t)) . -730) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 731 (#("	" 0 1 (fontified t)) . -740) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t)) . -741) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 742 (#("	" 0 1 (fontified t)) . -730) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t)) . -731) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 732 (#("	" 0 1 (fontified t)) . -709) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t)) . -710) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 711 (#("	" 0 1 (fontified t)) . -733) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#(" " 0 1 (fontified t)) . -734) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 735 (#("	" 0 1 (fontified t)) . -710) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t)) . -711) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 712 (#("	" 0 1 (fontified t)) . -690) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(" " 0 1 (fontified t)) . -691) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(" " 0 1 (fontified t)) . -692) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 693 (#(" " 0 1 (fontified t)) . -661) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 662 (#(" " 0 1 (fontified t)) . -661) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 662 (#("	" 0 1 (fontified t)) . -661) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("	" 0 1 (fontified t)) . -662) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#(" " 0 1 (fontified t)) . -663) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 664 (#("	" 0 1 (fontified t)) . -675) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#(" " 0 1 (fontified t)) . -676) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 677 (#("	" 0 1 (fontified t)) . -676) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("	" 0 1 (fontified t)) . -677) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(" " 0 1 (fontified t)) . -678) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 679 (#("	" 0 1 (fontified t)) . -701) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#(" " 0 1 (fontified t)) . -702) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 703 (#("	" 0 1 (fontified t)) . -726) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#(" " 0 1 (fontified t)) . -727) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 728 (#("	" 0 1 (fontified t)) . -753) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#(" " 0 1 (fontified t)) . -754) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) 755 (#("	" 0 1 (fontified t)) . -727) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#(" " 0 1 (fontified t)) . -728) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 729 (#("	" 0 1 (fontified t)) . -702) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#(" " 0 1 (fontified t)) . -703) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 704 (#("	" 0 1 (fontified t)) . -678) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#(" " 0 1 (fontified t)) . -679) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 680 (#("	" 0 1 (fontified t)) . -663) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -664) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) 665 (#("	" 0 1 (fontified t)) . -570) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#(" " 0 1 (fontified t)) . -571) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 572 (#("	" 0 1 (fontified t)) . -524) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#(" " 0 1 (fontified t)) . -525) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 526 (#("	" 0 1 (fontified t)) . -511) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#(" " 0 1 (fontified t)) . -512) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 513 (#("	" 0 1 (fontified t)) . -499) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t)) . -500) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 501 (#("	" 0 1 (fontified t)) . -369) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#(" " 0 1 (fontified t)) . -370) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#(" " 0 1 (fontified t)) . -371) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#(" " 0 1 (fontified t)) . -372) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#(" " 0 1 (fontified t)) . -373) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 374 (#("	" 0 1 (fontified t)) . -396) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 397 (#(" " 0 1 (fontified t)) . -397) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#(" " 0 1 (fontified t)) . -398) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#(" " 0 1 (fontified t)) . -399) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t)) . -400) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 401 (#("	" 0 1 (fontified t)) . -455) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#(" " 0 1 (fontified t)) . -456) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 457 (#(" " 0 1 (fontified t)) . -457) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#(" " 0 1 (fontified t)) . -458) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#(" " 0 1 (fontified t)) . -459) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) 460 (369 . 374) (#("	" 0 1 (fontified t)) . -369) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#(" " 0 1 (fontified t)) . -370) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 371 (393 . 398) (#("	" 0 1 (fontified t)) . -393) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#(" " 0 1 (fontified t)) . -394) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) 395 (449 . 454) (#("	" 0 1 (fontified t)) . -449) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#(" " 0 1 (fontified t)) . -450) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#(" " 0 1 (fontified t)) . -451) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (#(" " 0 1 (fontified t)) . -452) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#(" " 0 1 (fontified t)) . -453) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 454 (#(" " 0 1 (fontified t)) . -395) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#(" " 0 1 (fontified t)) . -396) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#(" " 0 1 (fontified t)) . -397) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) 398 (#(" " 0 1 (fontified t)) . -371) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t)) . -372) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t)) . -373) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) 374 (t 25214 47295 941172 997000)) nil (25214 59277 914978 637000) 0 nil])
([nil nil ((#("import Head from 'next/head'
" 0 6 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-keyword-face fontified t) 6 7 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 7 11 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-variable-name-face fontified t) 11 12 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 12 16 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-keyword-face fontified t) 16 17 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 17 28 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-string-face fontified t) 28 29 (fontified t)) . 45) (undo-tree-id0 . -15) (undo-tree-id1 . -15) (undo-tree-id2 . -15) (undo-tree-id3 . -7) (undo-tree-id4 . -11) (undo-tree-id5 . -15) 60 (t 25214 59277 914320 741000)) nil (25217 2002 889266 90000) 0 nil])
([nil nil ((304 . 307) (293 . 304) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -293) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -294) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("k" 0 1 (fontified t font-lock-face font-lock-string-face)) . -295) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("r" 0 1 (fontified t font-lock-face font-lock-string-face)) . -296) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 297 (290 . 297) (#(":" 0 1 (fontified t font-lock-face font-lock-string-face)) . -290) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -291) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -292) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -293) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -294) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("k" 0 1 (fontified t font-lock-face font-lock-string-face)) . -295) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("r" 0 1 (fontified t font-lock-face font-lock-string-face)) . -296) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -297) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("." 0 1 (fontified t font-lock-face font-lock-string-face)) . -298) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 299 (293 . 299) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -293) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 294 (293 . 294) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -293) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -294) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("c" 0 1 (fontified t font-lock-face font-lock-string-face)) . -295) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face)) . -296) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -297) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("h" 0 1 (fontified t font-lock-face font-lock-string-face)) . -298) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -299) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -300) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -301) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#(":" 0 1 (fontified t font-lock-face font-lock-string-face)) . -302) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("8" 0 1 (fontified t font-lock-face font-lock-string-face)) . -303) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -304) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("8" 0 1 (fontified t font-lock-face font-lock-string-face)) . -305) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -306) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 307 (t 25215 32557 849107 911000)) nil (25217 3181 256287 406000) 0 nil] [nil nil ((865 . 869) (823 . 828) (#("   " 0 3 (fontified t)) . 823) (815 . 816) (#("   " 0 3 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . 815) (806 . 811) (#("   " 0 3 (fontified t)) . 806) (790 . 794) (783 . 784) (771 . 778) (#(" " 0 1 (fontified t)) . 771) (756 . 764) (728 . 736) (702 . 709) (675 . 683) (#(" " 0 1 (fontified t)) . 675) (659 . 666) (566 . 571) (#("   " 0 3 (fontified t)) . 566) (518 . 523) (#("   " 0 3 (fontified t)) . 518) (503 . 508) (#("   " 0 3 (fontified t)) . 503) (489 . 494) (#("   " 0 3 (fontified t)) . 489) (479 . 483) (426 . 431) (367 . 372) (340 . 345) 803 (t 25215 32557 849107 911000)) ((#("	    " 0 5 (fontified t)) . 340) (undo-tree-id0 . -5) (undo-tree-id1 . -2) (#("	    " 0 5 (fontified t)) . 367) (undo-tree-id2 . -5) (undo-tree-id3 . -2) (#("	    " 0 5 (fontified t)) . 426) (undo-tree-id4 . -5) (undo-tree-id5 . -2) (#("    " 0 4 (fontified t)) . 479) (undo-tree-id6 . -1) (489 . 492) (#("	    " 0 5 (fontified t)) . 489) (undo-tree-id7 . -2) (503 . 506) (#("	    " 0 5 (fontified t)) . 503) (undo-tree-id8 . -2) (518 . 521) (#("	    " 0 5 (fontified t)) . 518) (undo-tree-id9 . -2) (566 . 569) (#("	    " 0 5 (fontified t)) . 566) (undo-tree-id10 . -2) (#("			    " 0 7 (fontified t)) . 659) (undo-tree-id11 . -2) (undo-tree-id12 . -4) (675 . 676) (#("				    " 0 8 (fontified t)) . 675) (undo-tree-id13 . -3) (undo-tree-id14 . -5) (#("			    " 0 7 (fontified t)) . 702) (undo-tree-id15 . -2) (undo-tree-id16 . -4) (#("				    " 0 8 (fontified t)) . 728) (undo-tree-id17 . -3) (undo-tree-id18 . -5) (#("				    " 0 8 (fontified t)) . 756) (undo-tree-id19 . -3) (undo-tree-id20 . -5) (771 . 772) (#("			    " 0 7 (fontified t)) . 771) (undo-tree-id21 . -2) (undo-tree-id22 . -4) (#("	" 0 1 (fontified t)) . 783) (#("    " 0 4 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . 790) (undo-tree-id23 . -1) (806 . 809) (#("	    " 0 5 (fontified t)) . 806) (undo-tree-id24 . -2) (815 . 818) (#("	" 0 1 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . 815) (823 . 826) (#("	    " 0 5 (fontified t)) . 823) (undo-tree-id25 . -2) (#("    " 0 4 (fontified t help-echo "Code has no side effects" cursor-sensor-functions (js2-echo-error))) . 865) (undo-tree-id26 . -1)) (25217 2002 888164 92000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 343) (327 . 344) (326 . 328) (#("{" 0 1 (fontified nil)) . 326) (324 . 327) (#(" " 0 1 (fontified nil)) . 324) (324 . 325)) ((#(" " 0 1 (fontified nil)) . 324) (324 . 325) (#(", {" 0 2 (fontified nil) 2 3 (fontified nil)) . 324) (326 . 327) (#("{}" 0 1 (fontified nil) 1 2 (fontified nil)) . 326) (#("crossdomain:true" 0 11 (fontified nil font-lock-face js2-object-property) 11 12 (fontified nil) 12 16 (fontified nil font-lock-face font-lock-constant-face)) . 327) (#("j" 0 1 (fontified nil)) . 343) (343 . 344)) (25217 3182 285197 207000) 0 nil])
nil
([nil nil ((300 . 305) (#("/80" 0 1 (fontified nil font-lock-face font-lock-string-face) 1 2 (fontified nil font-lock-face font-lock-string-face) 2 3 (fontified nil font-lock-face font-lock-string-face)) . 300) (294 . 303) (#("cal" 0 1 (fontified nil font-lock-face font-lock-string-face) 1 2 (fontified nil font-lock-face font-lock-string-face) 2 3 (fontified nil font-lock-face font-lock-string-face)) . 294) (294 . 297) (#("la" 0 1 (fontified nil font-lock-face font-lock-string-face) 1 2 (fontified nil font-lock-face font-lock-string-face)) . 294) (286 . 296) (#("https://eikrt.com/api" 0 1 (fontified t font-lock-face font-lock-string-face) 1 2 (fontified t font-lock-face font-lock-string-face) 2 3 (fontified t font-lock-face font-lock-string-face) 3 4 (fontified t font-lock-face font-lock-string-face) 4 5 (fontified t font-lock-face font-lock-string-face) 5 6 (fontified t font-lock-face font-lock-string-face) 6 7 (fontified t font-lock-face font-lock-string-face) 7 8 (fontified t font-lock-face font-lock-string-face) 8 9 (fontified t font-lock-face font-lock-string-face) 9 10 (fontified t font-lock-face font-lock-string-face) 10 11 (fontified t font-lock-face font-lock-string-face) 11 12 (fontified t font-lock-face font-lock-string-face) 12 13 (fontified t font-lock-face font-lock-string-face) 13 14 (fontified t font-lock-face font-lock-string-face) 14 15 (fontified t font-lock-face font-lock-string-face) 15 16 (fontified t font-lock-face font-lock-string-face) 16 17 (fontified t font-lock-face font-lock-string-face) 17 18 (fontified t font-lock-face font-lock-string-face) 18 19 (fontified t font-lock-face font-lock-string-face) 19 20 (fontified t font-lock-face font-lock-string-face) 20 21 (fontified t font-lock-face font-lock-string-face)) . 286)) ((286 . 307) (#("http:locla" 0 8 (fontified nil font-lock-face font-lock-string-face) 8 9 (fontified nil font-lock-face font-lock-string-face) 9 10 (fontified nil font-lock-face font-lock-string-face)) . 286) (undo-tree-id152 . 5) (294 . 296) (#("c" 0 1 (fontified nil font-lock-face font-lock-string-face)) . 294) (#("al" 0 1 (fontified nil font-lock-face font-lock-string-face) 1 2 (fontified nil font-lock-face font-lock-string-face)) . 295) (294 . 297) (#("alhost/80" 0 6 (fontified nil font-lock-face font-lock-string-face) 6 7 (fontified nil font-lock-face font-lock-string-face) 7 8 (fontified nil font-lock-face font-lock-string-face) 8 9 (fontified nil font-lock-face font-lock-string-face)) . 294) (300 . 303) (#(":8080" 0 5 (fontified t font-lock-face font-lock-string-face)) . 300)) (25217 3182 472918 607000) 0 nil])
([nil nil ((291 . 293)) ((#("//" 0 2 (fontified t font-lock-face font-lock-string-face)) . 291) (t 25217 2802 681726 610000)) (25217 3182 972899 396000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -277) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (277 . 278) (275 . 277) (t 25217 2802 681726 610000)) nil (25217 3204 295990 627000) 0 nil])
([nil nil ((nil rear-nonsticky nil 362 . 363) (#("
" 0 1 (fontified nil)) . -449) (361 . 450) 276) nil (25217 3204 295987 948000) 0 nil])
([nil nil ((394 . 395) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -394) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -395) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 396 (391 . 396) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -391) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) 392 (379 . 392) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -379) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 380 (378 . 380) (#(":" 0 1 (fontified t font-lock-face font-lock-string-face)) . -378) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -379) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 380 (379 . 380) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -379) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -380) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -381) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -382) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("c" 0 1 (fontified t font-lock-face font-lock-string-face)) . -383) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face)) . -384) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -385) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("h" 0 1 (fontified t font-lock-face font-lock-string-face)) . -386) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -387) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -388) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -389) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#(":" 0 1 (fontified t font-lock-face font-lock-string-face)) . -390) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("8" 0 1 (fontified t font-lock-face font-lock-string-face)) . -391) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -392) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("8" 0 1 (fontified t font-lock-face font-lock-string-face)) . -393) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("0" 0 1 (fontified t font-lock-face font-lock-string-face)) . -394) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 395 (#("/" 0 1 (fontified t font-lock-face font-lock-string-face syntax-table (7 . 47) help-echo "Code has no side effects" cursor-sensor-functions (js2-echo-error))) . -363) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 364 (#("/" 0 1 (fontified t font-lock-face font-lock-comment-face)) . -363) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 364) nil (25217 3204 295980 674000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -412) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (412 . 413) (#("," 0 1 (fontified t)) . -412) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#(" " 0 1 (fontified t)) . -413) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("{" 0 1 (fontified t)) . -414) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("c" 0 1 (fontified t font-lock-face js2-object-property)) . -415) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("r" 0 1 (fontified t font-lock-face js2-object-property)) . -416) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (#("o" 0 1 (fontified t font-lock-face js2-object-property)) . -417) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("s" 0 1 (fontified t font-lock-face js2-object-property)) . -418) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("s" 0 1 (fontified t font-lock-face js2-object-property)) . -419) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("d" 0 1 (fontified t font-lock-face js2-object-property)) . -420) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("o" 0 1 (fontified t font-lock-face js2-object-property)) . -421) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("m" 0 1 (fontified t font-lock-face js2-object-property)) . -422) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("a" 0 1 (fontified t font-lock-face js2-object-property)) . -423) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("i" 0 1 (fontified t font-lock-face js2-object-property)) . -424) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (#("n" 0 1 (fontified t font-lock-face js2-object-property)) . -425) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#(":" 0 1 (fontified t)) . -426) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-constant-face)) . -427) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#("r" 0 1 (fontified t font-lock-face font-lock-constant-face)) . -428) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("u" 0 1 (fontified t font-lock-face font-lock-constant-face)) . -429) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-constant-face)) . -430) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("}" 0 1 (fontified t)) . -431) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) 432 (t 25217 3204 299573 368000)) nil (25217 3210 216567 398000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -412) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (412 . 413) (411 . 412) (t 25217 3210 219598 159000)) nil (25217 3221 96261 150000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -411) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (411 . 412) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -411) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) 412 (t 25217 3221 107643 518000)) nil (25217 3227 910825 156000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -400) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (400 . 401) (397 . 400) (#("O" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -397) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (#("I" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -398) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (#("N" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -399) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) 400 (387 . 400) (#("I" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -387) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("S" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -388) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("_" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -389) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#("P" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -390) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("R" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -391) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("O" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -392) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 393 (387 . 393) (#("P" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -387) (undo-tree-id320 . -1) (undo-tree-id321 . -1) 388 (387 . 388) (386 . 387) (#("(" 0 1 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -386) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (#(")" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 387) (386 . 388) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -386) (378 . 387) (#("e" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -378) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (#("c" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -379) (undo-tree-id326 . -1) (undo-tree-id327 . -1) 380 (375 . 380) (374 . 376) (#("(" 0 1 (fontified nil)) . -374) (363 . 375) (#("p" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -363) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (#("r" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -364) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (#("i" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -365) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#("n" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -366) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("t" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -367) (undo-tree-id336 . -1) (undo-tree-id337 . -1) 368 (363 . 368) (361 . 363) (t 25217 3227 923671 760000)) nil (25217 3996 46754 375000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -400) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (400 . 401) (386 . 400) (#("." 0 1 (fontified t help-echo "missing name after . operator" cursor-sensor-functions (js2-echo-error))) . -386) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("I" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -387) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#("S" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -388) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (#("_" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -389) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("P" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -390) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("R" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -391) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("O" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -392) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("D" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -393) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#("U" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -394) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (#("C" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -395) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (#("T" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -396) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("I" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -397) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (#("O" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -398) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (#("N" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -399) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) 400 (t 25217 3996 86371 551000)) nil (25217 4365 110801 201000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -410) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (410 . 411) (399 . 410) (#("A" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -399) (undo-tree-id410 . -1) (undo-tree-id411 . -1) 400 (t 25217 4365 127498 308000)) nil (25217 4552 46460 848000) 0 nil])
([nil nil ((1003 . 1007) (961 . 966) (#("   " 0 3 (fontified t)) . 961) (953 . 954) (#("   " 0 3 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . 953) (944 . 949) (#("   " 0 3 (fontified t)) . 944) (928 . 932) (921 . 922) (909 . 916) (#(" " 0 1 (fontified t)) . 909) (894 . 902) (866 . 874) (840 . 847) (813 . 821) (#(" " 0 1 (fontified t)) . 813) (797 . 804) (704 . 709) (#("   " 0 3 (fontified t)) . 704) (656 . 661) (#("   " 0 3 (fontified t)) . 656) (641 . 646) (#("   " 0 3 (fontified t)) . 641) (627 . 632) (#("   " 0 3 (fontified t)) . 627) (617 . 621) (564 . 569) (505 . 510) (478 . 483) 1 (t 25217 4552 56052 676000)) nil (25217 4896 902161 211000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -493) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (493 . 494) (#("\\" 0 1 (fontified t font-lock-face font-lock-string-face)) . -492) (undo-tree-id414 . -1) (undo-tree-id415 . -1) 493 (492 . 493) (492 . 493) (#("\"" 0 1 (fontified t)) . -471) (undo-tree-id416 . -1) (undo-tree-id417 . -1) 472 (470 . 472) (#("\"" 0 1 (fontified nil)) . -470) (470 . 471) (#("\"" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -470) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . 471) (470 . 472) (#("\"" 0 1 (fontified nil)) . -470) (470 . 471) (#("\"" 0 1 (fontified t font-lock-face font-lock-comment-face)) . -491) (undo-tree-id420 . -1) (undo-tree-id421 . -1) 492 (492 . 493) (#("\"" 0 1 (fontified t font-lock-face font-lock-comment-face)) . -492) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 493 (491 . 493) (#("\"" 0 1 (fontified nil font-lock-face font-lock-comment-face)) . -491) (491 . 492) (#(" " 0 1 (fontified t font-lock-face font-lock-comment-face)) . -491) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-comment-face)) . -492) (undo-tree-id426 . -1) (undo-tree-id427 . -1) 493 (492 . 493) (491 . 494) (#("/" 0 1 (fontified t font-lock-face font-lock-comment-face)) . -491) (undo-tree-id428 . -1) (undo-tree-id429 . -1) 492 (474 . 492) (#("s" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -474) (undo-tree-id430 . -1) (undo-tree-id431 . -1) 475 (470 . 475) (502 . 508) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face)) . -502) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (#("b" 0 1 (fontified t font-lock-face font-lock-string-face)) . -503) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -504) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (#("u" 0 1 (fontified t font-lock-face font-lock-string-face)) . -505) (undo-tree-id438 . -1) (undo-tree-id439 . -1) 506 (492 . 506) (471 . 492) (470 . 472) (#("\"" 0 1 (fontified nil)) . -470) (467 . 471) (#("?" 0 1 (fontified t)) . -467) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#(" " 0 1 (fontified t)) . -468) (undo-tree-id442 . -1) (undo-tree-id443 . -1) 469 (449 . 469) (428 . 449) (#("e" 0 1 (fontified t)) . -428) (undo-tree-id444 . -1) (undo-tree-id445 . -1) 429 (425 . 429) (413 . 425) (411 . 413) (t 25217 4896 913038 423000)) nil (25217 5075 980555 248000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -468) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (468 . 469) (#("\\" 0 1 (fontified t font-lock-face font-lock-string-face)) . -468) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) 469 (468 . 469) (468 . 469) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -465) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) 466 (464 . 466) (#("\"" 0 1 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -464) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (464 . 465) (t 25217 5075 993195 712000)) nil (25217 5086 866000 609000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -552) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (552 . 553) (549 . 552) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions (js2-echo-error))) . -549) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("h" 0 1 (fontified t font-lock-face font-lock-string-face)) . -550) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -551) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -552) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("p" 0 1 (fontified t font-lock-face font-lock-string-face)) . -553) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -554) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (#(":" 0 1 (fontified t font-lock-face font-lock-string-face)) . -555) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -556) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -557) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -558) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -559) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("k" 0 1 (fontified t font-lock-face font-lock-string-face)) . -560) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (#("r" 0 1 (fontified t font-lock-face font-lock-string-face)) . -561) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -562) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("." 0 1 (fontified t font-lock-face font-lock-string-face)) . -563) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#("c" 0 1 (fontified t font-lock-face font-lock-string-face)) . -564) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -565) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("m" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -566) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) 567 (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -567) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face)) . -568) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (#("p" 0 1 (fontified t font-lock-face font-lock-string-face)) . -569) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -570) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -571) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (#("b" 0 1 (fontified t font-lock-face font-lock-string-face)) . -572) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -573) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -574) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#("g" 0 1 (fontified t font-lock-face font-lock-string-face)) . -575) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (#("p" 0 1 (fontified t font-lock-face font-lock-string-face)) . -576) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -577) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -578) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -579) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face)) . -580) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face)) . -581) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face)) . -582) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#("b" 0 1 (fontified t font-lock-face font-lock-string-face)) . -583) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -584) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (#("u" 0 1 (fontified t font-lock-face font-lock-string-face)) . -585) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -586) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -587) (undo-tree-id640 . -1) (undo-tree-id641 . -1) 588 (t 25217 5086 873208 509000)) nil (25217 5100 480973 566000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -510) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (510 . 511) (494 . 510) (t 25217 5100 509224 997000)) nil (25217 5158 394094 182000) 0 nil])
([nil nil ((#("	console.log(process.env.NEXT_PUBLIC_ENVIRONMENT)
" 0 1 (fontified t) 1 9 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 9 12 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 12 13 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 13 20 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 20 21 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 21 24 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 24 25 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 25 48 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 48 49 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 49 50 (fontified t)) . 362) (undo-tree-id644 . -22) (undo-tree-id645 . -22) (undo-tree-id646 . -24) (undo-tree-id647 . 25) (undo-tree-id648 . -24) (undo-tree-id649 . -24) (undo-tree-id650 . -45) (undo-tree-id651 . -13) (undo-tree-id652 . -20) (undo-tree-id653 . -45) (undo-tree-id654 . -45) (undo-tree-id655 . -45) (undo-tree-id656 . -13) (undo-tree-id657 . -13) (undo-tree-id658 . -22) (undo-tree-id659 . -22) (undo-tree-id660 . -13) (undo-tree-id661 . -20) (undo-tree-id662 . -1) (undo-tree-id663 . -49) (undo-tree-id664 . -22) 384 (t 25217 5158 405300 381000)) nil (25217 8092 437640 571000) 0 nil])
([nil nil ((#("	    <img src=\"images/mursu1.png\"></img>
" 0 5 (fontified t) 5 41 (fontified t)) . 1017) (undo-tree-id665 . -23) (undo-tree-id666 . -23) (undo-tree-id667 . -41) (undo-tree-id668 . -23) (undo-tree-id669 . -23) (undo-tree-id670 . -23) 1040 (t 25217 8092 448019 786000)) nil (25217 8205 641389 352000) 0 nil])
([nil nil ((#("				    <div key={index}>
" 0 8 (fontified t) 8 26 (fontified t)) . 869) (undo-tree-id783 . -17) (undo-tree-id784 . -17) (undo-tree-id785 . -17) (undo-tree-id786 . -17) (undo-tree-id787 . 9) (undo-tree-id788 . -18) (undo-tree-id789 . 3) (undo-tree-id790 . -24) (undo-tree-id791 . -17) 886 (t 25217 8205 656299 875000)) nil (25217 12067 844300 497000) 0 nil])
([nil nil ((#("				    <h2>{p.title}</h2>
" 0 15 (fontified t) 15 20 (fontified t font-lock-face js2-object-property-access) 20 26 (fontified t) 26 27 (fontified t)) . 869) (undo-tree-id779 . -17) (undo-tree-id780 . -17) (undo-tree-id781 . -26) (undo-tree-id782 . -17) 886) nil (25217 12067 844294 277000) 0 nil])
([nil nil ((#("				    <pre>{p.body}</pre>
" 0 8 (fontified t) 8 16 (fontified t) 16 20 (fontified t font-lock-face js2-object-property-access) 20 27 (fontified t) 27 28 (fontified t)) . 869) (undo-tree-id775 . -17) (undo-tree-id776 . -17) (undo-tree-id777 . -27) (undo-tree-id778 . -17) 886) nil (25217 12067 844291 589000) 0 nil])
([nil nil ((#("				    </div>
" 0 8 (fontified t) 8 9 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error)) 9 10 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error)) 10 13 (fontified t help-echo "missing ) in parenthetical" cursor-sensor-functions (js2-echo-error)) 13 14 (fontified t) 14 15 (fontified t)) . 869) (undo-tree-id758 . -13) (undo-tree-id759 . -13) (undo-tree-id760 . -14) (undo-tree-id761 . -10) (undo-tree-id762 . -13) (undo-tree-id763 . -15) (undo-tree-id764 . -10) (undo-tree-id765 . -13) (undo-tree-id766 . -10) (undo-tree-id767 . -13) (undo-tree-id768 . -8) (undo-tree-id769 . -10) (undo-tree-id770 . -8) (undo-tree-id771 . -10) (undo-tree-id772 . -8) (undo-tree-id773 . -10) (undo-tree-id774 . -13) 882) nil (25217 12067 844288 247000) 0 nil])
([nil nil ((891 . 892) (#("s" 0 1 (fontified t font-lock-face js2-function-param)) . -891) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (#("x" 0 1 (fontified t font-lock-face js2-function-param)) . -892) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) 893 (885 . 893) (#(" " 0 1 (fontified t)) . -885) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) 886 (881 . 886) (#("l" 0 1 (fontified t font-lock-face js2-function-param)) . -881) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (#("i" 0 1 (fontified t font-lock-face js2-function-param)) . -882) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (#("n" 0 1 (fontified t font-lock-face js2-function-param)) . -883) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (#("e" 0 1 (fontified t font-lock-face js2-function-param)) . -884) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (#("," 0 1 (fontified t)) . -885) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (#(" " 0 1 (fontified t)) . -886) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) 887 (881 . 887) (889 . 893) (#("				    " 0 8 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 888) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (892 . 896) (892 . 893) (887 . 892) (886 . 888) (#("{" 0 1 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -886) (882 . 887) (#(")" 0 1 (fontified nil)) . 882) (881 . 882) (880 . 882) (#("(" 0 1 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -880) (880 . 881) (880 . 881) (#(" " 0 1 (fontified nil)) . -880) (880 . 881) (#(")" 0 1 (fontified nil)) . -880) (880 . 881) (#(")" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -880) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . 1) (undo-tree-id753 . -1) (#(" " 0 1 (fontified t)) . -881) (undo-tree-id754 . -1) (undo-tree-id755 . -1) 882 (881 . 882) (#(")" 0 1 (fontified nil)) . 881) (880 . 881) (879 . 881) (#("(" 0 1 (fontified nil help-echo "missing : after property id" cursor-sensor-functions (js2-echo-error))) . -879) (875 . 880) (#("o" 0 1 (fontified t)) . -875) (undo-tree-id756 . -1) (undo-tree-id757 . -1) 876 (874 . 876) (873 . 875) (#("{" 0 1 (fontified nil)) . -873) (873 . 874) (868 . 873) 867) nil (25217 12067 844274 517000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -939) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (939 . 940) (934 . 939) (#("<" 0 1 (fontified t)) . -934) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) 935 (934 . 935) (#(">" 0 1 (fontified t help-echo "Unexpected end of file" cursor-sensor-functions (js2-echo-error))) . -934) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) 935 (927 . 935) (#("i" 0 1 (fontified t)) . -927) (undo-tree-id679 . -1) (undo-tree-id680 . -1) 928 (927 . 928) (921 . 927) (931 . 933) (#("b" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -931) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#(">" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -932) (undo-tree-id683 . -1) (undo-tree-id684 . -1) 933 (931 . 933) (#("b" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -931) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#(">" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -932) (undo-tree-id687 . -1) (undo-tree-id688 . -1) 933 (927 . 933) (921 . 927) (920 . 921) (#("<" 0 1 (fontified t)) . -920) (undo-tree-id689 . -1) (undo-tree-id690 . -1) 921 (919 . 921) (#("]" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -919) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . 1) (undo-tree-id694 . -1) 920 (919 . 920) (#("]" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -919) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . 1) (undo-tree-id698 . -1) 920 (919 . 920) (#("]" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -919) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . 1) (undo-tree-id702 . -1) (#("}" 0 1 (fontified t)) . -920) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . 1) (undo-tree-id706 . -1) 921 (#("}" 0 1 (fontified nil)) . 921) (920 . 921) (#(" " 0 1 (fontified nil)) . -920) (920 . 921) (#("}" 0 1 (fontified nil help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -920) (919 . 921) (#(" " 0 1 (fontified nil)) . -919) (919 . 920) (#("]" 0 1 (fontified nil)) . -919) (919 . 920) (#("\"" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -919) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . 920) (919 . 921) (#("\"" 0 1 (fontified nil)) . -919) (914 . 920) (903 . 904) (#("    " 0 4 (fontified nil)) . 903) (916 . 918) (#("{" 0 1 (fontified nil)) . -916) (915 . 917) (#(" " 0 1 (fontified t)) . -915) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (#("=" 0 1 (fontified t)) . -916) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#(" " 0 1 (fontified t)) . -917) (undo-tree-id713 . -1) (undo-tree-id714 . -1) 918 (910 . 918) (#("b" 0 1 (fontified t)) . -910) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (#("v" 0 1 (fontified t)) . -911) (undo-tree-id717 . -1) (undo-tree-id718 . -1) 912 (911 . 912) (#(">" 0 1 (fontified t help-echo "Unexpected end of file" cursor-sensor-functions (js2-echo-error))) . -911) (undo-tree-id719 . -1) (undo-tree-id720 . -1) 912 (907 . 912) (899 . 907)) nil (25217 12067 844243 776000) 0 nil])
([nil nil ((#("					<div key={index}>
" 0 14 (fontified t) 14 15 (fontified t) 15 23 (fontified t)) . 899) (undo-tree-id804 . -5) (undo-tree-id805 . -5) (undo-tree-id806 . -5) 904 (t 25217 12067 850704 816000)) nil (25217 12168 226631 155000) 0 nil])
([nil nil ((nil rear-nonsticky nil 873 . 874) (#("
" 0 1 (fontified nil)) . -891) (868 . 892) 867) nil (25217 12168 226628 218000) 0 nil])
([nil nil ((#("					</div>
" 0 6 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 6 7 (fontified t font-lock-face font-lock-string-face syntax-table (7 . 47) help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 7 11 (fontified t font-lock-face font-lock-string-face help-echo "unterminated regular expression literal" cursor-sensor-functions (js2-echo-error)) 11 12 (fontified t)) . 940) (undo-tree-id797 . -5) (undo-tree-id798 . -5) (undo-tree-id799 . -11) (undo-tree-id800 . -11) (undo-tree-id801 . -7) (undo-tree-id802 . -11) (undo-tree-id803 . -5) 945) nil (25217 12168 226626 965000) 0 nil])
([nil nil ((nil rear-nonsticky nil 952 . 953) (#("
" 0 1 (fontified nil)) . -959) (947 . 960) 946) nil (25217 12168 226621 841000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -952) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (952 . 953) (#("	" 0 1 (fontified t rear-nonsticky t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . -952) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) 953) nil (25217 12168 226618 618000) 0 nil])
([nil nil ((#("				{p.map((line, index) => {
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 10 (fontified t font-lock-face js2-function-call) 10 11 (fontified t) 11 12 (fontified t) 12 16 (fontified t font-lock-face js2-function-param) 16 18 (fontified t) 18 23 (fontified t font-lock-face js2-function-param) 23 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t)) . 892) (undo-tree-id875 . -16) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) (undo-tree-id880 . -16) (undo-tree-id881 . -16) 908 (t 25217 12168 250966 246000)) nil (25217 12210 611928 308000) 0 nil])
([nil nil ((#("					<p>penis</p>
" 0 5 (fontified t) 5 17 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 17 18 (fontified t)) . 892) (undo-tree-id867 . -9) (undo-tree-id868 . -9) (undo-tree-id869 . -5) (undo-tree-id870 . -17) (undo-tree-id871 . -5) (undo-tree-id872 . -17) (undo-tree-id873 . -17) (undo-tree-id874 . -9) 901) nil (25217 12210 611720 521000) 0 nil])
([nil nil ((#("				})}
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 892) (undo-tree-id860 . -6) (undo-tree-id861 . -8) (undo-tree-id862 . -6) (undo-tree-id863 . -7) (undo-tree-id864 . 2) (undo-tree-id865 . -7) (undo-tree-id866 . -6) 898) nil (25217 12210 611715 289000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -912) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (912 . 913) (910 . 912) (#("P" 0 1 (fontified t)) . -910) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (#(">" 0 1 (fontified t)) . -911) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) 912 (902 . 912) (#("{" 0 1 (fontified nil)) . -902) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#("}" 0 1 (fontified t)) . 903) (#("p" 0 1 (fontified t)) . -903) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (#("." 0 1 (fontified t help-echo "missing name after . operator" cursor-sensor-functions (js2-echo-error))) . -904) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) 905 (903 . 905) (#("[" 0 1 (fontified nil)) . -903) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (#("]" 0 1 (fontified t)) . 904) (undo-tree-id851 . -1) (903 . 905) (#("[" 0 1 (fontified nil)) . -903) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (903 . 904) (902 . 904) (#("{" 0 1 (fontified nil)) . -902) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (902 . 903) (#("/" 0 1 (fontified t)) . -902) (undo-tree-id856 . -1) (undo-tree-id857 . -1) 903 (899 . 903) (#("	" 0 1 (fontified t rear-nonsticky t)) . -873) (undo-tree-id858 . -1) (undo-tree-id859 . -1) 874 (891 . 900) 874) nil (25217 12210 611704 715000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -902) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (902 . 903) (#("p" 0 1 (fontified t)) . -902) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (#("." 0 1 (fontified t)) . -903) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (#("b" 0 1 (fontified t)) . -904) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (#("o" 0 1 (fontified t)) . -905) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (#("d" 0 1 (fontified t)) . -906) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (#("y" 0 1 (fontified t)) . -907) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) 908 (t 25217 12210 635076 770000)) nil (25217 12234 740782 430000) 0 nil])
([nil nil ((#("				    <p></p>
" 0 11 (fontified t) 11 15 (fontified t) 15 16 (fontified t)) . 891) (undo-tree-id886 . -10) (undo-tree-id887 . -11) (undo-tree-id888 . 5) (undo-tree-id889 . -16) (undo-tree-id890 . -16) (undo-tree-id891 . -16) (undo-tree-id892 . -16) (undo-tree-id893 . -16) (undo-tree-id894 . -16) (undo-tree-id895 . -16) (undo-tree-id896 . -11) (undo-tree-id897 . -11) (undo-tree-id898 . -11) (undo-tree-id899 . -11) (undo-tree-id900 . -11) (undo-tree-id901 . -11) (undo-tree-id902 . -11) (undo-tree-id903 . -11) (undo-tree-id904 . -11) (undo-tree-id905 . -11) (undo-tree-id906 . -11) (undo-tree-id907 . -11) (undo-tree-id908 . -11) (undo-tree-id909 . -11) (undo-tree-id910 . -11) (undo-tree-id911 . -11) (undo-tree-id912 . -11) (undo-tree-id913 . -11) (undo-tree-id914 . -10) (undo-tree-id915 . -11) (undo-tree-id916 . -10) 901) nil (25217 12234 740769 780000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -913) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (913 . 914) (912 . 913) (911 . 913) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -911) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (900 . 912) (899 . 901) (#("{" 0 1 (fontified nil)) . -899) (899 . 900) (890 . 899) 878) nil (25217 12234 740749 794000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -899) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (899 . 900) (946 . 954) (947 . 951) (#("				    " 0 8 (fontified nil)) . 946) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (950 . 954) (945 . 951) (944 . 946) (#("{" 0 1 (fontified nil)) . -944) (940 . 945) (934 . 939) (932 . 934) (#("s" 0 1 (fontified t help-echo "Undeclared variable or function 'lines'" cursor-sensor-functions (js2-echo-error))) . -932) (undo-tree-id946 . -1) (undo-tree-id947 . -1) 933 (928 . 933) (929 . 930) (#(" " 0 1 (fontified nil)) . -929) (929 . 930) (#(")" 0 1 (fontified nil help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -929) (929 . 930) (#(")" 0 1 (fontified nil)) . 929) (928 . 929) (927 . 929) (#("(" 0 1 (fontified nil)) . -927) (927 . 928) (#(")" 0 1 (fontified t)) . -927) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . 1) (undo-tree-id951 . -1) 928 (#(")" 0 1 (fontified nil)) . 928) (927 . 928) (926 . 928) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -926) (926 . 927) (921 . 926) (920 . 922) (#("{" 0 1 (fontified nil)) . -920) (920 . 921) (915 . 920) (t 25217 12234 755139 711000)) nil (25217 12286 594756 876000) 0 nil])
([nil nil ((#("				    {console.log(p)}
" 0 8 (fontified t) 8 9 (fontified t) 9 17 (fontified t) 17 20 (fontified t font-lock-face js2-function-call) 20 22 (fontified t) 22 23 (fontified t) 23 25 (fontified t)) . 891) (undo-tree-id937 . -7) (undo-tree-id938 . -24) (undo-tree-id939 . 17) (undo-tree-id940 . -7) (undo-tree-id941 . -23) 898) nil (25217 12286 594748 451000) 0 nil])
([nil nil ((nil rear-nonsticky nil 937 . 938) (#("
" 0 1 (fontified nil)) . -954) (929 . 955) 928) nil (25217 12648 592 368000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 955) (951 . 956) (#("p" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 951) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1)) ((951 . 952) (#("line" 0 4 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 951) (#("j" 0 1 (fontified nil)) . 955) (955 . 956)) (25217 12650 480243 93000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -914) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (914 . 915) (913 . 914) (#(")" 0 1 (fontified t)) . -912) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . 1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) 913 (895 . 899) (907 . 909) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -907) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (899 . 908) (898 . 899) (896 . 898)) nil (25217 12664 608354 484000) 0 nil] [nil nil ((#("j" 0 1 (fontified nil)) . 908) (908 . 909) (#(")" 0 1 (fontified nil)) . 908) (907 . 908) (895 . 899) (902 . 904) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access)) . 902) (897 . 903)) ((#(".keys(" 0 1 (fontified nil) 1 2 (fontified nil font-lock-face js2-function-call) 2 3 (fontified nil font-lock-face js2-function-call) 3 4 (fontified nil font-lock-face js2-function-call) 4 5 (fontified nil font-lock-face js2-function-call) 5 6 (fontified nil font-lock-face js2-object-property-access)) . 897) (undo-tree-id1160 . -5) (902 . 903) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 902) (undo-tree-id1161 . -1) (#("    " 0 4 (fontified nil)) . 895) (#(")" 0 1 (fontified nil)) . 907) (908 . 909) (#("j" 0 1 (fontified nil)) . 908) (908 . 909)) (25217 12649 472306 818000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -922) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (922 . 923) (915 . 922) (#("m" 0 1 (fontified t font-lock-face js2-function-call)) . -915) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (#("a" 0 1 (fontified t font-lock-face js2-function-call)) . -916) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (#("p" 0 1 (fontified t font-lock-face js2-function-call)) . -917) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) 918 (t 25217 12664 652264 454000)) nil (25217 12668 604457 481000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -913) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (913 . 914) (912 . 913) (911 . 913) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -911) (903 . 912) (902 . 903) (900 . 902) (#("p" 0 1 (fontified t)) . -900) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (#("." 0 1 (fontified t)) . -901) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (#("k" 0 1 (fontified t font-lock-face js2-function-call)) . -902) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (#("e" 0 1 (fontified t font-lock-face js2-function-call)) . -903) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (#("y" 0 1 (fontified t font-lock-face js2-function-call)) . -904) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (#("s" 0 1 (fontified t font-lock-face js2-function-call)) . -905) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (#("(" 0 1 (fontified t)) . -906) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (#(")" 0 1 (fontified t)) . -907) (undo-tree-id985 . -1) (undo-tree-id986 . -1) 908 (t 25217 12351 727445 213000)) ((900 . 908) (#("Ob" 0 1 (fontified nil) 1 2 (fontified nil)) . 900) (undo-tree-id1145 . -2) (undo-tree-id1146 . -2) (#("j" 0 1 (fontified nil)) . 902) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (#("ect.keys(" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil font-lock-face js2-function-call) 5 6 (fontified nil font-lock-face js2-function-call) 6 7 (fontified nil font-lock-face js2-function-call) 7 8 (fontified nil font-lock-face js2-function-call) 8 9 (fontified nil font-lock-face js2-object-property-access)) . 903) (undo-tree-id1149 . -8) (undo-tree-id1150 . -8) (911 . 912) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 911) (undo-tree-id1151 . -1) (undo-tree-id1152 . 1) (undo-tree-id1153 . -2) (#("p" 0 1 (fontified nil)) . 912) (undo-tree-id1154 . -1) (#("j" 0 1 (fontified nil)) . 913) (913 . 914)) (25217 12644 693024 939000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -917) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (917 . 918) (916 . 917) (915 . 917) (#("(" 0 1 (fontified nil)) . -915) (904 . 916) (903 . 905) (#("{" 0 1 (fontified nil)) . -903) (903 . 904) (895 . 903) (873 . 877) (890 . 891) (t 25217 12668 620274 858000)) nil (25217 12784 62110 471000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -915) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (915 . 916) (914 . 915) (913 . 915) (#("[" 0 1 (fontified nil)) . -913) (undo-tree-id990 . -1) (913 . 914) (t 25217 12524 151896 324000)) ((#("[" 0 1 (fontified nil)) . 913) (913 . 914) (#("[]" 0 1 (fontified nil) 1 2 (fontified nil)) . 913) (undo-tree-id1142 . -1) (undo-tree-id1143 . 1) (#("0" 0 1 (fontified nil)) . 914) (undo-tree-id1144 . -1) (#("j" 0 1 (fontified nil)) . 915) (915 . 916) (t 25217 12594 820081 428000)) (25217 12644 404908 505000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -948) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (948 . 949) (942 . 948) (t 25217 12784 80577 669000)) nil (25217 12798 92450 303000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -931) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (931 . 932) (930 . 932) (#("(" 0 1 (fontified nil)) . -930) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (922 . 931) (921 . 922) (920 . 921) (906 . 920) (#("k" 0 1 (fontified t)) . -906) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (#("e" 0 1 (fontified t)) . -907) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (#("y" 0 1 (fontified t)) . -908) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (#("s" 0 1 (fontified t)) . -909) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) 910 (906 . 910) (900 . 906) (972 . 981) (#("						" 0 6 (fontified nil)) . 971) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (975 . 977) (975 . 976) (900 . 910) (#("O" 0 1 (fontified t)) . -900) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (#("b" 0 1 (fontified t)) . -901) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (#("j" 0 1 (fontified t)) . -902) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (#("e" 0 1 (fontified t)) . -903) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (#("c" 0 1 (fontified t)) . -904) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (#("t" 0 1 (fontified t)) . -905) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (#("." 0 1 (fontified t)) . -906) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (#("k" 0 1 (fontified t font-lock-face js2-function-call)) . -907) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (#("e" 0 1 (fontified t font-lock-face js2-function-call)) . -908) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (#("y" 0 1 (fontified t font-lock-face js2-function-call)) . -909) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (#("s" 0 1 (fontified t font-lock-face js2-function-call)) . -910) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (#("(" 0 1 (fontified t)) . -911) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (#("p" 0 1 (fontified t)) . -912) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (#("[" 0 1 (fontified t)) . -913) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . 1) (undo-tree-id1085 . -1) (#("0" 0 1 (fontified t)) . -914) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (#("]" 0 1 (fontified t)) . -915) (undo-tree-id1091 . -1) (undo-tree-id1092 . 1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . 1) (undo-tree-id1096 . -1) (#(")" 0 1 (fontified t)) . -916) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) 917 (t 25217 12594 820081 428000)) ((900 . 917) (#("
					    " 0 1 (fontified nil) 1 10 (fontified t)) . 900) (undo-tree-id1100 . 10) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (#("
" 0 1 (fontified nil)) . 975) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (#("		" 0 2 (fontified nil)) . 975) (971 . 977) (#("					    " 0 9 (fontified t)) . 972) (#("
					" 0 1 (fontified t) 1 6 (fontified nil)) . 900) (undo-tree-id1105 . -6) (undo-tree-id1106 . -6) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -6) (undo-tree-id1110 . -6) (undo-tree-id1111 . -6) (undo-tree-id1112 . -6) (undo-tree-id1113 . -6) (undo-tree-id1114 . -6) (undo-tree-id1115 . -6) (#("keys" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 906) (undo-tree-id1116 . -4) (undo-tree-id1117 . -4) (906 . 910) (#("const keys = O" 0 5 (fontified nil font-lock-face font-lock-keyword-face help-echo "syntax error" cursor-sensor-functions (js2-echo-error)) 5 6 (fontified nil) 6 10 (fontified nil help-echo "syntax error" cursor-sensor-functions (js2-echo-error)) 10 14 (fontified nil)) . 906) (undo-tree-id1118 . -14) (undo-tree-id1119 . -14) (undo-tree-id1120 . -14) (undo-tree-id1121 . -14) (undo-tree-id1122 . -6) (undo-tree-id1123 . -10) (undo-tree-id1124 . -5) (undo-tree-id1125 . -14) (#("b" 0 1 (fontified nil)) . 920) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (#("j" 0 1 (fontified nil)) . 921) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (#("ect.keys(" 0 8 (fontified nil) 8 9 (fontified nil)) . 922) (undo-tree-id1136 . -8) (undo-tree-id1137 . -8) (undo-tree-id1138 . -9) (undo-tree-id1139 . -9) (undo-tree-id1140 . -8) (930 . 931) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 930) (undo-tree-id1141 . 1) (#("j" 0 1 (fontified nil)) . 931) (931 . 932)) (25217 12644 402515 298000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -942) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (942 . 943) (936 . 942) (#("k" 0 1 (fontified t font-lock-face js2-function-call)) . -936) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (#("e" 0 1 (fontified t font-lock-face js2-function-call)) . -937) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (#("y" 0 1 (fontified t font-lock-face js2-function-call)) . -938) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (#("s" 0 1 (fontified t font-lock-face js2-function-call)) . -939) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) 940 (t 25217 12798 120614 510000)) nil (25217 12854 233281 742000) 0 nil])
nil
([nil nil ((#("				    {console.log(line)}
" 0 7 (fontified t) 7 8 (fontified t rear-nonsticky t) 8 9 (fontified t) 9 16 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 16 17 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 17 20 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 20 21 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 21 25 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 25 26 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 26 27 (fontified t) 27 28 (fontified t)) . 988) (undo-tree-id1228 . -24) (undo-tree-id1229 . -24) (undo-tree-id1230 . -27) (undo-tree-id1231 . -28) (undo-tree-id1232 . -28) (undo-tree-id1233 . -24) (undo-tree-id1234 . -24) (undo-tree-id1235 . -9) (undo-tree-id1236 . -26) (undo-tree-id1237 . -24) 1012 (t 25217 12854 244761 800000)) nil (25217 12881 834271 786000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -998) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (998 . 999) (989 . 998) (#("p" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -989) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) 990 (989 . 990) (#("o" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -989) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (#("b" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -990) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (#("j" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -991) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (#("e" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -992) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (#("c" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -993) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (#("t" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -994) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (#("." 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -995) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) 996 (992 . 996) (991 . 992) (989 . 991) (992 . 994) (986 . 988) (984 . 991) (983 . 984) (#("	" 0 1 (fontified t)) . -983) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) 984 (983 . 984) (#("	" 0 1 (fontified t)) . -983) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) 984 (983 . 984) (#("    " 0 4 (fontified t)) . 983) (undo-tree-id1224 . -2) (undo-tree-id1225 . -3) (undo-tree-id1226 . -3) (undo-tree-id1227 . -2) 985) nil (25217 12881 834260 845000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1006) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (1006 . 1007) (1002 . 1006) (#("." 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -1002) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (#("i" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -1003) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (#("n" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -1004) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) 1005 (997 . 1005) (996 . 998) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -996) (996 . 997) (985 . 996) (984 . 986) (#("{" 0 1 (fontified nil)) . -984) (984 . 985) (978 . 984) (t 25217 12881 848834 260000) 977) nil (25217 12901 158859 822000) 0 nil])
([nil nil ((#("					{console.log(line.line)}
" 0 5 (fontified t) 5 6 (fontified t) 6 14 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 14 17 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 17 23 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 23 27 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 27 28 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 28 29 (fontified t) 29 30 (fontified t)) . 979) (undo-tree-id1255 . -23) (undo-tree-id1256 . -23) (undo-tree-id1257 . 3) (undo-tree-id1258 . -30) (undo-tree-id1259 . -30) (undo-tree-id1260 . -23) (undo-tree-id1261 . -23) (undo-tree-id1262 . -6) (undo-tree-id1263 . -28) (undo-tree-id1264 . -23) 1002 (t 25217 12901 172884 990000)) nil (25217 12923 108531 210000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1004) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (1004 . 1005) (1003 . 1004) (#("}" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -994) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . 1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) 995 (984 . 988) (989 . 991) (#("{" 0 1 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -989) (undo-tree-id1254 . -1) (989 . 990)) nil (25217 12923 108521 839000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1066) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (1066 . 1067) (1064 . 1066) (#("b" 0 1 (fontified t)) . -1064) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (#(">" 0 1 (fontified t)) . -1065) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) 1066 (1060 . 1066) (1050 . 1060) (1011 . 1016) (#("[" 0 1 (fontified nil)) . -1011) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (#("]" 0 1 (fontified t)) . 1012) (1011 . 1013) (#("[" 0 1 (fontified nil)) . -1011) (1011 . 1012) (997 . 1001) (1006 . 1008) (#("{" 0 1 (fontified nil)) . -1006) (1001 . 1007) (#("k" 0 1 (fontified t)) . -1001) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (#("e" 0 1 (fontified t)) . -1002) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (#("y" 0 1 (fontified t)) . -1003) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) 1004 (1001 . 1004) (#(" " 0 1 (fontified t)) . -1001) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (#("e" 0 1 (fontified t)) . -1002) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (#("k" 0 1 (fontified t)) . -1003) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) 1004 (1001 . 1004) (1000 . 1002) (#("b" 0 1 (fontified t)) . -1000) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (#(">" 0 1 (fontified t)) . -1001) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) 1002 (997 . 1002) (991 . 997) (1033 . 1034) (#("	    " 0 5 (fontified nil)) . -1032) (undo-tree-id1289 . -5) (undo-tree-id1290 . -5) (1032 . 1033) (#("	" 0 1 (fontified nil)) . 1032) (1028 . 1032) (1033 . 1034) (1024 . 1033) (1025 . 1033) (#("					    " 0 9 (fontified nil)) . 1024) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (1028 . 1033) (1028 . 1029) (#(")" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -991) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . 1) (undo-tree-id1296 . -1) 992 (990 . 992) (#("(" 0 1 (fontified nil font-lock-face font-lock-keyword-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -990) (983 . 991) (975 . 983) (#("    " 0 4 (fontified nil)) . -924) (978 . 979) (t 25217 12923 136942 661000)) nil (25217 12989 506261 452000) 0 nil])
([nil nil ((#("				    {console.log(p)}
" 0 8 (fontified t) 8 17 (fontified t) 17 20 (fontified t font-lock-face js2-function-call) 20 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t)) . 895) (undo-tree-id1305 . -20) (undo-tree-id1306 . -20) (undo-tree-id1307 . -25) (undo-tree-id1308 . -25) (undo-tree-id1309 . -20) (undo-tree-id1310 . -20) (undo-tree-id1311 . 5) (undo-tree-id1312 . -21) (undo-tree-id1313 . 3) (undo-tree-id1314 . -23) (undo-tree-id1315 . -20) 915 (t 25217 12989 521116 986000)) nil (25217 13117 822813 911000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -836) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (836 . 837) (832 . 836) (#("1" 0 1 (fontified t)) . -836) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) 837 (836 . 838) (#("2" 0 1 (fontified t)) . -836) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (#(">" 0 1 (fontified t)) . -837) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) 838 (828 . 838) (824 . 828) 821) nil (25217 13117 822804 642000) 0 nil])
([nil nil ((#("			<h1>asdf</h1>
" 0 11 (fontified t) 11 16 (fontified t) 16 17 (fontified t)) . 825) (undo-tree-id1316 . -10) (undo-tree-id1317 . 6) (undo-tree-id1318 . -17) (undo-tree-id1319 . -17) (undo-tree-id1320 . -10) (undo-tree-id1321 . -10) (undo-tree-id1322 . -10) 835 (t 25217 13117 837455 488000)) nil (25217 13128 25889 543000) 0 nil])
([nil nil ((nil rear-nonsticky nil 897 . 898) (#("
" 0 1 (fontified nil)) . -911) (894 . 912) 873) nil (25217 13128 25868 338000) 0 nil])
([nil nil ((#("			<h1>asdf</h1>
" 0 2 (fontified t) 2 3 (fontified t rear-nonsticky t) 3 11 (fontified t) 11 16 (fontified t) 16 17 (fontified t)) . 895) (undo-tree-id1323 . -3) (undo-tree-id1324 . -16) (undo-tree-id1325 . -16) (undo-tree-id1326 . -17) (undo-tree-id1327 . -17) (undo-tree-id1328 . -3) (undo-tree-id1329 . -3) 898 (t 25217 13128 45482 977000)) nil (25217 13133 292199 343000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -1010) (993 . 1011) 970) nil (25217 13133 292172 181000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1025) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (1025 . 1026) (1024 . 1025) (1016 . 1024) (1015 . 1017) (#("(" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -1015) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (1004 . 1016) (1003 . 1005) (#("{" 0 1 (fontified nil)) . -1003) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (1003 . 1004) (993 . 1003) (t 25217 13133 317497 169000) 970) nil (25217 13142 389453 821000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -926) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (926 . 927) (923 . 926) (#("f" 0 1 (fontified t font-lock-face js2-function-call)) . -923) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (#("o" 0 1 (fontified t font-lock-face js2-function-call)) . -924) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (#("r" 0 1 (fontified t font-lock-face js2-function-call)) . -925) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (#("E" 0 1 (fontified t font-lock-face js2-function-call)) . -926) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (#("a" 0 1 (fontified t font-lock-face js2-function-call)) . -927) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (#("c" 0 1 (fontified t font-lock-face js2-function-call)) . -928) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (#("h" 0 1 (fontified t font-lock-face js2-function-call)) . -929) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) 930 (t 25217 13142 405521 633000)) nil (25217 13180 499255 109000) 0 nil])
([nil nil ((#("			<h1>asdf</h1>
" 0 2 (fontified t) 2 3 (rear-nonsticky t fontified t) 3 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t) 7 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 16 (fontified t) 16 17 (fontified t)) . 1024) (undo-tree-id1368 . -15) (undo-tree-id1369 . -16) (undo-tree-id1370 . -16) (undo-tree-id1371 . -17) (undo-tree-id1372 . -17) (undo-tree-id1373 . -15) (undo-tree-id1374 . -15) 1039 (t 25217 13180 509624 96000)) nil (25217 13185 456236 982000) 0 nil])
([nil nil ((#("					    {console.log(line.line)}
" 0 9 (fontified t) 9 17 (fontified t) 17 18 (fontified t) 18 21 (fontified t font-lock-face js2-function-call) 21 27 (fontified t) 27 31 (fontified t font-lock-face js2-object-property-access) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t)) . 990) (undo-tree-id1359 . -5) (undo-tree-id1360 . -34) (undo-tree-id1361 . -34) (undo-tree-id1362 . -34) (undo-tree-id1363 . -34) (undo-tree-id1364 . -34) (undo-tree-id1365 . -5) (undo-tree-id1366 . -34) (undo-tree-id1367 . -5) 995) nil (25217 13185 456229 671000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1070) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (1070 . 1071) (#("g" 0 1 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . -1070) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (#("g" 0 1 (fontified t help-echo "illegally formed XML syntax" cursor-sensor-functions (js2-echo-error))) . -1071) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) 1072 (1070 . 1072) (989 . 999) (t 25217 13185 473637 432000)) nil (25217 13556 444545 206000) 0 nil])
([nil nil ((1041 . 1042) (#("    " 0 4 (fontified t)) . 1041) (1029 . 1030) (#("    " 0 4 (fontified t)) . 1029) (1000 . 1001) (#("    " 0 4 (fontified t)) . 1000) (993 . 994) (#("    " 0 4 (fontified t)) . 993) (969 . 970) (#("    " 0 4 (fontified t)) . 969) (954 . 955) (#("    " 0 4 (fontified t)) . 954) (899 . 903) 1154) nil (25217 13556 444529 604000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1024) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (1024 . 1025) (1020 . 1024) (1021 . 1025) (1019 . 1021) (#("\"" 0 1 (fontified nil)) . -1019) (1017 . 1020) (#(" " 0 1 (fontified t)) . -1017) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (#("\"" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -1018) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1019) (1018 . 1020) (#("\"" 0 1 (fontified nil)) . -1018) (1010 . 1019) (1005 . 1010) (1027 . 1028) (#("}" 0 1 (fontified t)) . -1005) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . 1) (undo-tree-id1390 . -1) 1006 (#("	" 0 1 (fontified nil)) . -1004) (1004 . 1005) (#("	" 0 1 (fontified nil)) . 1004) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (1000 . 1004) (1001 . 1003) (#("{" 0 1 (fontified nil)) . -1001) (1001 . 1002) (t 25217 13556 458629 367000)) nil (25217 13611 43571 458000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1061 . 1062) (#("
" 0 1 (cursor-sensor-functions (js2-echo-error) fontified nil)) . -1110) (1052 . 1111) 1025 (t 25217 13611 50774 716000)) nil (25217 14064 378636 247000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1119 . 1120) (#("
" 0 1 (cursor-sensor-functions (js2-echo-error) fontified nil)) . -1168) (1110 . 1169) 1062) nil (25217 14064 378635 174000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1169) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (1169 . 1170) (1160 . 1169) (1158 . 1159) (1158 . 1160) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -1158) (1151 . 1159) (#("l" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -1152) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (#("i" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -1153) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (#("n" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -1154) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (#("e" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -1155) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) 1156 (1150 . 1152) (#("`" 0 1 (fontified nil)) . -1150) (1150 . 1151) (1150 . 1154) (1149 . 1151) (#("{" 0 1 (fontified nil)) . -1149) (1149 . 1150) (#("\"" 0 1 (fontified t)) . -1149) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (#("\"" 0 1 (fontified t)) . -1150) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) 1151 (#("\"" 0 1 (fontified nil)) . 1151) (1150 . 1151) (1149 . 1151) (#("\"" 0 1 (fontified nil)) . -1149) (1144 . 1150) (#("{" 0 1 (fontified t)) . -1145) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (#("l" 0 1 (fontified t)) . -1146) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (#("i" 0 1 (fontified t)) . -1147) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (#("n" 0 1 (fontified t)) . -1148) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (#("e" 0 1 (fontified t)) . -1149) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (#("." 0 1 (fontified t)) . -1150) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (#("l" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1151) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (#("i" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1152) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (#("n" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1153) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (#("e" 0 1 (fontified t font-lock-face js2-object-property-access)) . -1154) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (#("}" 0 1 (fontified t)) . -1155) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . 1) (undo-tree-id1432 . -1) 1156 (1141 . 1144) (#("p" 0 1 (fontified t)) . -1141) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (#("r" 0 1 (fontified t)) . -1142) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (#("e" 0 1 (fontified t)) . -1143) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) 1144 (1158 . 1161) (#("p" 0 1 (fontified t)) . -1158) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (#("r" 0 1 (fontified t)) . -1159) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (#("e" 0 1 (fontified t)) . -1160) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) 1161 (1102 . 1104) (#("p" 0 1 (fontified t)) . -1102) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (#("r" 0 1 (fontified t)) . -1103) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (#("e" 0 1 (fontified t)) . -1104) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) 1105 (1078 . 1080) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1078) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (#("i" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1079) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1080) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1081) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1082) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) 1083 (1089 . 1091) (#("p" 0 1 (fontified t)) . -1089) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (#("r" 0 1 (fontified t)) . -1090) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (#("e" 0 1 (fontified t)) . -1091) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) 1092 (1137 . 1140) (#("b" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1137) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1138) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (#("d" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1139) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (#("y" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1140) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) 1141 (1078 . 1083) (#("b" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1078) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1079) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (#("d" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1080) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (#("y" 0 1 (fontified t font-lock-face font-lock-string-face)) . -1081) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) 1082) nil (25217 14064 378626 814000) 0 nil])
([nil nil ((#("	    console.log(res.data)
" 0 5 (fontified t) 5 12 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 12 13 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 13 16 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 16 17 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 17 20 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 20 21 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 21 25 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 25 26 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 26 27 (fontified t)) . 534) (undo-tree-id1483 . -21) (undo-tree-id1484 . -21) (undo-tree-id1485 . -27) (undo-tree-id1486 . -27) (undo-tree-id1487 . -5) (undo-tree-id1488 . -26) (undo-tree-id1489 . -21) (undo-tree-id1490 . -21) (undo-tree-id1491 . -21) 555 (t 25217 14064 391978 122000)) nil (25218 29384 995243 844000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -1133) (1079 . 1134) 1061 (t 25218 29385 2903 120000)) nil (25218 29408 944266 777000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -1187) (1133 . 1188) 1089) nil (25218 29408 944266 354000) 0 nil])
([nil nil ((1052 . 1053) (#("2" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1052)) nil (25218 29408 944265 869000) 0 nil])
([nil nil ((1160 . 1161) (#("2" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1160)) nil (25218 29408 944265 531000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -1241) (1187 . 1242) 1160) nil (25218 29408 944265 159000) 0 nil])
([nil nil ((1214 . 1215) (#("3" 0 1 (fontified t font-lock-face font-lock-string-face)) . 1214)) nil (25218 29408 944264 639000) 0 nil])
([nil nil ((1222 . 1223) (#("2" 0 1 (fontified t)) . 1222)) nil (25218 29408 944264 346000) 0 nil])
([nil nil ((1168 . 1169) (#("2" 0 1 (fontified t)) . 1168)) nil (25218 29408 944263 851000) 0 nil])
([nil nil ((1114 . 1115) (#("2" 0 1 (fontified t)) . 1114)) nil (25218 29408 944263 531000) 0 nil])
([nil nil ((1060 . 1061) (#("2" 0 1 (fontified t)) . 1060) (undo-tree-id1492 . -1)) nil (25218 29408 944262 849000) 0 nil])
([nil nil ((1076 . 1077) (#("2" 0 1 (fontified t)) . 1076)) nil (25218 29408 944255 844000) 0 nil])
([nil nil ((1130 . 1131) (#("2" 0 1 (fontified t)) . 1130)) nil (25218 29408 944255 326000) 0 nil])
([nil nil ((1184 . 1185) (#("2" 0 1 (fontified t)) . 1184)) nil (25218 29408 944254 765000) 0 nil])
([nil current ((1238 . 1239) (#("2" 0 1 (fontified t)) . 1238)) nil (25218 29408 944251 503000) 0 nil])
nil
