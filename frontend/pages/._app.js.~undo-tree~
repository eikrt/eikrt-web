(undo-tree-save-format-version . 1)
"9f21bf01472fe8f3db8eb6738de1217242ddc370"
[nil nil nil nil (25214 59567 575924 626000) 0 nil]
([nil nil ((#("j" 0 1 (fontified t)) . -11) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (11 . 12) (#("o" 0 1 (font-lock-face font-lock-string-face fontified t)) . -11) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) 12 (11 . 12) (#("/" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -105) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("/" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -106) (undo-tree-id222 . -1) (undo-tree-id223 . -1) 107 (105 . 107) (t 25214 59569 551446 705000)) nil (25215 32436 747187 894000) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -61) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (61 . 62) (#("{" 0 1 (fontified t)) . -61) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t)) . -62) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t)) . -63) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("}" 0 1 (fontified t)) . -64) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . 1) (undo-tree-id18 . -1) 65 (#("C" 0 1 (font-lock-face js2-function-param fontified t)) . -63) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("o" 0 1 (font-lock-face js2-function-param fontified t)) . -64) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("m" 0 1 (font-lock-face js2-function-param fontified t)) . -65) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("p" 0 1 (font-lock-face js2-function-param fontified t)) . -66) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("o" 0 1 (font-lock-face js2-function-param fontified t)) . -67) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("n" 0 1 (font-lock-face js2-function-param fontified t)) . -68) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("e" 0 1 (font-lock-face js2-function-param fontified t)) . -69) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("n" 0 1 (font-lock-face js2-function-param fontified nil)) . -70) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("t" 0 1 (font-lock-face js2-function-param fontified t)) . -71) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("," 0 1 (fontified t)) . -72) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t)) . -73) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("p" 0 1 (font-lock-face js2-function-param fontified t)) . -74) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("a" 0 1 (font-lock-face js2-function-param fontified t)) . -75) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("g" 0 1 (font-lock-face js2-function-param fontified t)) . -76) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("e" 0 1 (font-lock-face js2-function-param fontified t)) . -77) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("P" 0 1 (font-lock-face js2-function-param fontified t)) . -78) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("r" 0 1 (font-lock-face js2-function-param fontified t)) . -79) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("o" 0 1 (font-lock-face js2-function-param fontified t)) . -80) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("p" 0 1 (font-lock-face js2-function-param fontified t)) . -81) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("s" 0 1 (font-lock-face js2-function-param fontified t)) . -82) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 83 (t 25211 62051 102618 687000)) ((63 . 83) (61 . 65) (#("j" 0 1 (fontified nil)) . 61) (61 . 62)) (25214 59567 8765 718000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -65) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (65 . 66) (#("j" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-string-face fontified t)) . -65) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(":" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-string-face fontified t)) . -66) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("w" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-string-face fontified t)) . -67) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) 68 (66 . 68) (65 . 66) (#("j" 0 1 (fontified t)) . -65) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (#("j" 0 1 (fontified t)) . -66) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) 67 (66 . 67) (65 . 66) (55 . 65) (54 . 56) (#("\"" 0 1 (fontified nil)) . -54) (32 . 55) (31 . 32) 10) nil (25215 32436 747181 317000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -93) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (93 . 94) (91 . 93) (#(" " 0 1 (fontified t)) . -91) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 92 (#(" " 0 1 (fontified t)) . -91) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("{" 0 1 (fontified t)) . -92) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . 1) (undo-tree-id151 . -1) (#("}" 0 1 (fontified t)) . -93) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . 1) (undo-tree-id156 . -1) 94 (#("." 0 1 (fontified t)) . -93) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("." 0 1 (fontified t)) . -94) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("." 0 1 (fontified t)) . -95) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("p" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -96) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("a" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -97) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("g" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -98) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("e" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -99) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("P" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -100) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("r" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -101) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("o" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -102) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#("p" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -103) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("s" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . -104) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) 105 (t 25214 59547 39354 932000)) ((93 . 105) (91 . 94) (91 . 92) (#("dd" 0 2 (fontified nil)) . 91) (#("j" 0 1 (fontified nil)) . 93) (93 . 94)) (25214 59566 559896 916000) 0 nil])
([nil current ((#("j" 0 1 (fontified t)) . -246) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (246 . 247) (237 . 246) (#("o" 0 1 (fontified t font-lock-face js2-object-property)) . -237) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("n" 0 1 (fontified t font-lock-face js2-object-property)) . -238) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("C" 0 1 (fontified t font-lock-face js2-object-property)) . -239) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("l" 0 1 (fontified t font-lock-face js2-object-property)) . -240) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("i" 0 1 (fontified t font-lock-face js2-object-property)) . -241) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("c" 0 1 (fontified t font-lock-face js2-object-property)) . -242) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("k" 0 1 (fontified t font-lock-face js2-object-property)) . -243) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 244 (219 . 222) (#("y" 0 1 (fontified t font-lock-face js2-object-property-access)) . -219) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("n" 0 1 (fontified t font-lock-face js2-object-property-access)) . -220) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("c" 0 1 (fontified t font-lock-face js2-object-property-access)) . -221) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 222 (221 . 222) (218 . 221) (#("n" 0 1 (fontified t font-lock-face js2-object-property-access)) . -218) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("u" 0 1 (fontified t font-lock-face js2-object-property-access)) . -219) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("m" 0 1 (fontified t font-lock-face js2-object-property-access)) . -220) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("b" 0 1 (fontified t font-lock-face js2-object-property-access)) . -221) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("e" 0 1 (fontified t font-lock-face js2-object-property-access)) . -222) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("r" 0 1 (fontified t font-lock-face js2-object-property-access)) . -223) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 224 (#("s" 0 1 (fontified t font-lock-face js2-object-property)) . -206) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 207 (198 . 207) (#("o" 0 1 (fontified t font-lock-face js2-object-property)) . -198) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("i" 0 1 (fontified t font-lock-face js2-object-property)) . -199) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 200 (197 . 200) (#("s" 0 1 (fontified t font-lock-face js2-object-property)) . -197) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("o" 0 1 (fontified t font-lock-face js2-object-property)) . -198) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("m" 0 1 (fontified t font-lock-face js2-object-property)) . -199) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("e" 0 1 (fontified t font-lock-face js2-object-property)) . -200) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("P" 0 1 (fontified t font-lock-face js2-object-property)) . -201) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("r" 0 1 (fontified t font-lock-face js2-object-property)) . -202) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("o" 0 1 (fontified t font-lock-face js2-object-property)) . -203) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("p" 0 1 (fontified t font-lock-face js2-object-property)) . -204) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 205 (177 . 180) (#("F" 0 1 (fontified t help-echo "Undeclared variable or function 'F'" cursor-sensor-functions (js2-echo-error))) . -177) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("o" 0 1 (fontified t help-echo "Undeclared variable or function 'Foo'" cursor-sensor-functions (js2-echo-error))) . -178) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("o" 0 1 (fontified t help-echo "Undeclared variable or function 'Foo'" cursor-sensor-functions (js2-echo-error))) . -179) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 180 (nil rear-nonsticky nil 274 . 275) (nil fontified nil 177 . 275) (177 . 275) (176 . 177) (t 25215 32441 164787 155000) 175) nil (25215 32536 144122 377000) 0 nil])
([nil nil ((#("    <Componentdd/>
" 0 16 (fontified t) 16 19 (fontified t)) . 77) (undo-tree-id130 . -15) (undo-tree-id131 . 3) (undo-tree-id132 . -15) (undo-tree-id133 . -15) (undo-tree-id134 . -19) (undo-tree-id135 . -5) (undo-tree-id136 . -14) (undo-tree-id137 . -15) 92) ((77 . 96) (t 25214 59562 683418 636000)) (25214 59562 677390 405000) 0 nil])
nil
nil
