(undo-tree-save-format-version . 1)
"5fc3ca28a3030292970b4daea36f40098d0d77c1"
[nil nil nil nil (25218 29553 343760 951000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1041 . 1042) (#("
" 0 1 (fontified nil)) . -2259) (1037 . 2260) (t 25218 29486 855162 130000)) nil (25218 29553 343759 370000) 0 nil])
([nil nil ((#("import contentStyles from '../styles/content.module.css';
" 0 6 (font-lock-face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 20 (font-lock-face font-lock-variable-name-face fontified t) 20 21 (fontified t) 21 25 (font-lock-face font-lock-keyword-face fontified t) 25 26 (fontified t) 26 56 (font-lock-face font-lock-string-face fontified t) 56 58 (fontified t)) . 1) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) 5) nil (25218 29553 343758 43000) 0 nil])
([nil nil ((#("import styles from './layout.module.css';
" 0 6 (font-lock-face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 13 (font-lock-face font-lock-variable-name-face fontified t) 13 14 (fontified t) 14 18 (font-lock-face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 40 (font-lock-face font-lock-string-face fontified t) 40 41 (fontified t) 41 42 (fontified t)) . 1) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -41) (undo-tree-id64 . -4) 5) nil (25218 29553 343753 862000) 0 nil])
([nil nil ((#("import Head from 'next/head';
" 0 6 (font-lock-face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 11 (font-lock-face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 16 (font-lock-face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 28 (font-lock-face font-lock-string-face fontified t) 28 29 (fontified t) 29 30 (fontified t)) . 1) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -29) (undo-tree-id60 . -4) 5) nil (25218 29553 343751 89000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1)) nil (25218 29553 343748 821000) 0 nil])
([nil nil ((#("export default function Layout() {
" 0 6 (font-lock-face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 14 (font-lock-face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 23 (font-lock-face font-lock-keyword-face fontified t) 23 24 (fontified t) 24 30 (font-lock-face font-lock-function-name-face fontified t) 30 34 (fontified t) 34 35 (fontified t)) . 1) (undo-tree-id56 . -34)) nil (25218 29553 343748 318000) 0 nil])
([nil nil ((#("    return (
" 0 4 (fontified t) 4 10 (font-lock-face font-lock-keyword-face fontified t) 10 12 (fontified t) 12 13 (fontified t)) . 1) (undo-tree-id55 . -12)) nil (25218 29553 343747 516000) 0 nil])
([nil nil ((#("	<div className={styles.container}>
" 0 17 (fontified t) 17 23 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'styles'" fontified t) 23 24 (fontified t) 24 33 (font-lock-face js2-object-property-access fontified t) 33 35 (fontified t) 35 36 (fontified t)) . 1) (undo-tree-id52 . -17) (undo-tree-id53 . -23) (undo-tree-id54 . -35)) nil (25218 29553 343746 576000) 0 nil])
([nil nil ((#("   <Head>
" 0 9 (fontified t) 9 10 (fontified t)) . 1) (undo-tree-id51 . -9)) nil (25218 29553 343744 730000) 0 nil])
([nil nil ((#("   <title>Eikrt website </title>
" 0 32 (fontified t) 32 33 (fontified t)) . 1) (undo-tree-id50 . -32)) nil (25218 29553 343743 825000) 0 nil])
([nil nil ((#("   <link rel=\"icon\" href=\"/favicon.ico\"/>
" 0 41 (fontified t) 41 42 (fontified t)) . 1) (undo-tree-id49 . -41)) nil (25218 29553 343742 619000) 0 nil])
([nil nil ((#("   </Head>
" 0 10 (fontified t) 10 11 (fontified t)) . 1) (undo-tree-id48 . -10)) nil (25218 29553 343741 713000) 0 nil])
([nil nil ((#("	<div className={contentStyles.header_box}>
" 0 17 (fontified t) 17 30 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'contentStyles'" fontified t) 30 31 (fontified t) 31 41 (font-lock-face js2-object-property-access fontified t) 41 43 (fontified t) 43 44 (fontified t)) . 1) (undo-tree-id45 . -17) (undo-tree-id46 . -30) (undo-tree-id47 . -43)) nil (25218 29553 343740 805000) 0 nil])
([nil nil ((#("            <div className = {contentStyles.title_box}>
" 0 30 (fontified t) 30 43 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'contentStyles'" fontified t) 43 44 (fontified t) 44 53 (font-lock-face js2-object-property-access fontified t) 53 55 (fontified t) 55 56 (fontified t)) . 1) (undo-tree-id42 . -30) (undo-tree-id43 . -43) (undo-tree-id44 . -55)) nil (25218 29553 343738 469000) 0 nil])
([nil nil ((#("                <a href=\"/\"> <h1>Eikrt website</h1> </a>
" 0 56 (fontified t) 56 57 (fontified t)) . 1) (undo-tree-id41 . -56)) nil (25218 29553 343736 171000) 0 nil])
([nil nil ((#("            </div>
" 0 18 (fontified t) 18 19 (fontified t)) . 1) (undo-tree-id40 . -18)) nil (25218 29553 343735 154000) 0 nil])
([nil nil ((#("            <div className = {contentStyles.title_box}>
" 0 30 (fontified t) 30 43 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'contentStyles'" fontified t) 43 44 (fontified t) 44 53 (font-lock-face js2-object-property-access fontified t) 53 55 (fontified t) 55 56 (fontified t)) . 1) (undo-tree-id37 . -30) (undo-tree-id38 . -43) (undo-tree-id39 . -55)) nil (25218 29553 343734 263000) 0 nil])
([nil nil ((#("                <a href=\"/projects\"> <h1>Projects</h1> </a>
" 0 59 (fontified t) 59 60 (fontified t)) . 1) (undo-tree-id36 . -59)) nil (25218 29553 343732 54000) 0 nil])
([nil nil ((#("            </div>
" 0 18 (fontified t) 18 19 (fontified t)) . 1) (undo-tree-id35 . -18)) nil (25218 29553 343731 175000) 0 nil])
([nil nil ((#("            <div className={contentStyles.title_box}>
" 0 28 (fontified t) 28 41 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'contentStyles'" fontified t) 41 42 (fontified t) 42 51 (font-lock-face js2-object-property-access fontified t) 51 53 (fontified t) 53 54 (fontified t)) . 1) (undo-tree-id32 . -28) (undo-tree-id33 . -41) (undo-tree-id34 . -53)) nil (25218 29553 343729 941000) 0 nil])
([nil nil ((#("                <a href=\"/tutorials\"> <h1>Tutorials</h1> </a>
" 0 61 (fontified t) 61 62 (fontified t)) . 1) (undo-tree-id31 . -61)) nil (25218 29553 343727 650000) 0 nil])
([nil nil ((#("            </div>
" 0 18 (fontified t) 18 19 (fontified t)) . 1) (undo-tree-id30 . -18)) nil (25218 29553 343726 515000) 0 nil])
([nil nil ((#("            <div className={contentStyles.title_box}>
" 0 28 (fontified t) 28 41 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'contentStyles'" fontified t) 41 42 (fontified t) 42 51 (font-lock-face js2-object-property-access fontified t) 51 53 (fontified t) 53 54 (fontified t)) . 1) (undo-tree-id27 . -28) (undo-tree-id28 . -41) (undo-tree-id29 . -53)) nil (25218 29553 343725 305000) 0 nil])
([nil nil ((#("                <a href=\"/reviews\"> <h1>Reviews</h1> </a>
" 0 57 (fontified t) 57 58 (fontified t)) . 1) (undo-tree-id26 . -57)) nil (25218 29553 343722 931000) 0 nil])
([nil nil ((#("            </div>
" 0 18 (fontified t) 18 19 (fontified t)) . 1) (undo-tree-id25 . -18)) nil (25218 29553 343721 950000) 0 nil])
([nil nil ((#("            <div className={contentStyles.title_box}>
" 0 28 (fontified t) 28 41 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'contentStyles'" fontified t) 41 42 (fontified t) 42 51 (font-lock-face js2-object-property-access fontified t) 51 53 (fontified t) 53 54 (fontified t)) . 1) (undo-tree-id22 . -28) (undo-tree-id23 . -41) (undo-tree-id24 . -53)) nil (25218 29553 343721 288000) 0 nil])
([nil nil ((#("                <a href=\"/about\"> <h1>About</h1> </a>
" 0 53 (fontified t) 53 54 (fontified t)) . 1) (undo-tree-id21 . -53)) nil (25218 29553 343719 733000) 0 nil])
([nil nil ((#("            </div>
" 0 18 (fontified t) 18 19 (fontified t)) . 1) (undo-tree-id20 . -18)) nil (25218 29553 343719 122000) 0 nil])
([nil nil ((#("	</div>
" 0 7 (fontified t) 7 8 (fontified t)) . 1) (undo-tree-id18 . -8) (undo-tree-id19 . -7)) nil (25218 29553 343718 233000) 0 nil])
([nil nil ((#("   </div>)
" 0 10 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 10 11 (fontified t)) . 1) (undo-tree-id16 . -10) (undo-tree-id17 . -10)) nil (25218 29553 343717 79000) 0 nil])
([nil nil ((#("}
" 0 1 (fontified t) 1 2 (fontified t)) . 1) (undo-tree-id15 . -1)) nil (25218 29553 343716 18000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id14 . -1)) nil (25218 29553 343714 917000) 0 nil])
([nil nil ((#("    " 0 4 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t)) . -1164) (undo-tree-id0 . -4) (#("    " 0 4 (fontified t)) . -1157) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (#("	" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "illegally formed XML syntax" fontified nil)) . -1149) (1149 . 1150) (#("	" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "illegally formed XML syntax" fontified nil)) . 1149) (1145 . 1149) (#("    " 0 4 (fontified t)) . -1141) (#("	" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified nil)) . -1137) (1137 . 1138) (#("	" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified nil)) . 1137) (undo-tree-id4 . -1) (1133 . 1137) (#("    " 0 4 (cursor-sensor-functions (js2-echo-error) help-echo "illegally formed XML syntax" fontified t)) . -1125) (#("	" 0 1 (fontified nil)) . -1119) (1119 . 1120) (#("	" 0 1 (fontified nil)) . 1119) (1115 . 1119) (#("    " 0 4 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t)) . -1110) (undo-tree-id5 . -4) (#("	" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "illegally formed XML syntax" fontified nil)) . -1100) (1100 . 1101) (#("	" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "illegally formed XML syntax" fontified nil)) . 1100) (1096 . 1100) (#("    " 0 4 (fontified t)) . -1089) (#("	" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified nil)) . -1082) (1082 . 1083) (#("	" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified nil)) . 1082) (undo-tree-id6 . -1) (1078 . 1082) (#("	" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "illegally formed XML syntax" fontified t)) . -1067) (#("    " 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . -997) (#("    " 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . -947) (#("    " 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . -897) (#("    " 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . -847) (#("    " 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . -797) (#("    " 0 4 (fontified t)) . -743) (#("	" 0 1 (fontified nil)) . -737) (737 . 738) (#("	" 0 1 (fontified nil)) . 737) (733 . 737) (#("	" 0 1 (fontified nil)) . -710) (710 . 711) (#("	" 0 1 (fontified nil)) . 710) (706 . 710) (#("	" 0 1 (fontified nil)) . -692) (692 . 693) (#("	" 0 1 (fontified nil)) . 692) (688 . 692) (#("    " 0 4 (fontified t)) . -637) (#("    " 0 4 (fontified t)) . -615) (#("    " 0 4 (fontified t)) . -602) (#("	" 0 1 (fontified nil)) . -574) (574 . 575) (#("	" 0 1 (fontified nil)) . 574) (570 . 574) (#("	" 0 1 (fontified nil)) . -550) (550 . 551) (#("	" 0 1 (fontified nil)) . 550) (546 . 550) (#("	" 0 1 (fontified nil)) . -536) (536 . 537) (#("	" 0 1 (fontified nil)) . 536) (532 . 536) (#("    " 0 4 (fontified t)) . -502) (#("    " 0 4 (fontified t)) . -458) (#("    " 0 4 (fontified t)) . -447) (#("    " 0 4 (fontified t)) . -437) (#("    " 0 4 (fontified t)) . -430) (#("    " 0 4 (fontified t)) . -420) (undo-tree-id7 . -4) (#("    " 0 4 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t)) . -414) (#("	" 0 1 (fontified nil)) . -410) (410 . 411) (#("	" 0 1 (fontified nil)) . 410) (406 . 410) (#("    " 0 4 (fontified t)) . -387) (undo-tree-id8 . -4) (#("	" 0 1 (fontified nil)) . -364) (364 . 365) (#("	" 0 1 (fontified nil)) . 364) (360 . 364) (#("    " 0 4 (fontified t)) . -329) (undo-tree-id9 . -4) (#("	" 0 1 (fontified nil)) . -299) (299 . 300) (#("	" 0 1 (fontified nil rear-nonsticky t)) . 299) (undo-tree-id10 . -1) (295 . 299) (#("	" 0 1 (font-lock-face font-lock-comment-face fontified nil)) . -154) (154 . 155) (#("	" 0 1 (fontified nil)) . 154) (undo-tree-id11 . -1) (150 . 154) (#("	" 0 1 (fontified nil)) . -63) (63 . 64) (#("	" 0 1 (fontified nil)) . 63) (59 . 63) (#("    " 0 4 (fontified t)) . -40) (undo-tree-id12 . -4) (#("    " 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t)) . -1) (undo-tree-id13 . -4) 1217) nil (25218 29553 343711 560000) 0 nil])
([nil nil ((1165 . 1166)) nil (25218 29553 343687 49000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (1 . 2) (1 . 2) (t 25218 29553 355331 249000)) nil (25218 29581 890905 575000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -60) (1 . 61)) nil (25218 29581 890904 239000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1) (undo-tree-id70 . -1) (undo-tree-id71 . -1)) nil (25218 29581 890903 795000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1226) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (1226 . 1227) (1225 . 1226)) nil (25218 29581 890902 198000) 0 nil])
([nil nil ((1226 . 1227)) nil (25218 29581 890894 632000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -60) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (60 . 61) (51 . 60) (#("H" 0 1 (font-lock-face font-lock-function-name-face fontified t)) . -51) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 52 (#("o" 0 1 (font-lock-face font-lock-function-name-face fontified t)) . -52) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("m" 0 1 (font-lock-face font-lock-function-name-face fontified t)) . -53) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("e" 0 1 (font-lock-face font-lock-function-name-face fontified t)) . -54) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 55 (t 25218 29581 899403 838000)) nil (25218 29588 691526 939000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -56) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (56 . 57) (51 . 56) (50 . 52) (#("'" 0 1 (fontified nil)) . -50) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (50 . 51) (#("ä" 0 1 (fontified t help-echo "missing ; before statement" cursor-sensor-functions (js2-echo-error))) . -50) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 51 (44 . 51) (#("}" 0 1 (fontified nil help-echo "SyntaxError: missing keyword 'from' after import specifier set" cursor-sensor-functions (js2-echo-error))) . 44) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (43 . 44) (#(" " 0 1 (fontified nil)) . -43) (43 . 44) (#("}" 0 1 (fontified nil font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -43) (38 . 44) (#("s" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -38) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 39 (35 . 39) (34 . 36) (#("{" 0 1 (fontified nil)) . -34) (27 . 35) (26 . 27) (t 25218 29588 711421 162000) 7) nil (25218 30314 555287 644000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -57) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (57 . 58) (44 . 57) (35 . 36) (t 25218 30314 650955 76000)) nil (25218 30328 45567 403000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -55) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (55 . 56) (#("," 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -55) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 56 (t 25218 30328 50967 965000)) nil (25218 30330 204333 576000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -103) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (103 . 104) (102 . 103) (101 . 102) (91 . 101) (90 . 92) (#("'" 0 1 (fontified nil)) . -90) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (90 . 91) (#("ä" 0 1 (fontified t help-echo "missing ; before statement" cursor-sensor-functions (js2-echo-error))) . -90) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 91 (78 . 91) (#("L" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "SyntaxError: missing keyword 'from' after import specifier set" cursor-sensor-functions (js2-echo-error))) . -78) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("Ö" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "SyntaxError: missing keyword 'from' after import specifier set" cursor-sensor-functions (js2-echo-error))) . -79) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 80 (78 . 80) (#("'" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions (js2-echo-error))) . -78) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -79) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -80) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("y" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -81) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -82) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("u" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -83) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -84) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("'" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -85) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 86 (79 . 85) (78 . 80) (#("'" 0 1 (fontified nil)) . -78) (71 . 79) (70 . 71) (t 25218 30330 214969 123000) 58) nil (25218 30352 803093 763000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -104) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (104 . 105) (93 . 104) (#("b" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -93) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -94) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -95) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("g" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -96) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("p" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -97) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -98) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 99 (#("s" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -99) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 100 (93 . 100) (t 25218 30352 814968 686000)) nil (25218 30363 419079 450000) 0 nil])
([nil nil ((nil rear-nonsticky nil 115 . 116) (#("
" 0 1 (fontified nil)) . -160) (115 . 161) 100 (t 25218 30363 422961 900000)) nil (25218 30405 250415 148000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -170) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (170 . 171) (153 . 170) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -153) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("n" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -154) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 155 (151 . 155) (#("r" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -151) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -152) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 153 (152 . 153) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -152) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 153 (146 . 153) (#("c" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -146) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -147) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("m" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -148) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("p" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -149) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -150) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("n" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -151) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -152) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("n" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -153) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -154) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -155) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -156) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -157) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -158) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("y" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -159) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -160) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("u" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -161) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -162) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("." 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -163) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("j" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -164) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -165) (undo-tree-id125 . -1) (undo-tree-id126 . -1) 166 (132 . 136) (131 . 132) (#("t" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -131) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("y" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -132) (undo-tree-id129 . -1) (undo-tree-id130 . -1) 133 (125 . 133) (#("n" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -125) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -126) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -127) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("n" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -128) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -129) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("S" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -130) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -131) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("y" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -132) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -133) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -134) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -135) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 136 (123 . 136) (#("L" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -123) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("a" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "TypeError: redeclaration of variable Layout." cursor-sensor-functions (js2-echo-error))) . -124) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("y" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "TypeError: redeclaration of variable Layout." cursor-sensor-functions (js2-echo-error))) . -125) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "TypeError: redeclaration of variable Layout." cursor-sensor-functions (js2-echo-error))) . -126) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("u" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "TypeError: redeclaration of variable Layout." cursor-sensor-functions (js2-echo-error))) . -127) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-variable-name-face help-echo "TypeError: redeclaration of variable Layout." cursor-sensor-functions (js2-echo-error))) . -128) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 129) nil (25218 30405 250409 911000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -170) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (170 . 171) (152 . 170) (#("/" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -152) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("c" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -153) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -154) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("n" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -155) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -156) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -157) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("n" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -158) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -159) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("S" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -160) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -161) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#("y" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -162) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("l" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -163) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#("e" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -164) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -165) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("." 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -166) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("c" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -167) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("s" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -168) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 169 (#("s" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -169) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 170 (t 25218 30405 258907 267000)) nil (25218 30421 85803 823000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -170) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (170 . 171) (169 . 170)) nil (25218 30421 85740 463000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -212) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (212 . 213) (208 . 212) (#("o" 0 1 (fontified t font-lock-face js2-function-param)) . -208) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 209 (207 . 209) (t 25218 30421 94878 448000)) nil (25218 30463 548918 998000) 0 nil])
([nil current ((#("j" 0 1 (fontified t)) . -479) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 480 (479 . 480) (#("`" 0 1 (fontified t font-lock-face font-lock-string-face)) . -479) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 480 (478 . 480) (#("`" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -478) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (478 . 479) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . -478) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) 479 (#("`" 0 1 (fontified t font-lock-face font-lock-string-face)) . -429) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) 430 (428 . 430) (#("`" 0 1 (fontified nil)) . -428) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (428 . 429) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -428) (undo-tree-id272 . -1) (undo-tree-id273 . -1) 429 (#("`" 0 1 (fontified t font-lock-face font-lock-string-face)) . -483) (undo-tree-id274 . -1) (undo-tree-id275 . -1) 484 (482 . 484) (#("`" 0 1 (fontified nil)) . -482) (482 . 483) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "unterminated string literal" cursor-sensor-functions (js2-echo-error))) . -482) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 483 (#("`" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -533) (undo-tree-id278 . -1) (undo-tree-id279 . -1) 534 (532 . 534) (#("`" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -532) (532 . 533) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -532) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 533 (517 . 531) (#("b" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -517) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("v" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -518) (undo-tree-id284 . -1) (undo-tree-id285 . -1) 519 (517 . 519) (515 . 516) (515 . 517) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -515) (515 . 516) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -515) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("b" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -516) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -517) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("u" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -518) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -519) (undo-tree-id294 . -1) (undo-tree-id295 . -1) 520 (471 . 477) (#("g" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -471) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -472) (undo-tree-id298 . -1) (undo-tree-id299 . -1) 473 (469 . 473) (463 . 469) (462 . 464) (#("{" 0 1 (fontified nil font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -462) (462 . 463) (461 . 462) (#("a" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -461) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("b" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -462) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("o" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -463) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("u" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -464) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("t" 0 1 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -465) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) 466 (t 25218 30463 571418 152000)) nil (25218 30526 669892 177000) 0 nil])
nil
