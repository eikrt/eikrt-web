(undo-tree-save-format-version . 1)
"56c8d8503089116d8bf3627d37084e9f50964b6a"
[nil nil nil nil (25213 20981 518999 521000) 0 nil]
([nil nil ((#("Po" 0 2 (fontified t)) . 494) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (t 25213 19162 859794 263000)) nil (25213 20981 518998 448000) 0 nil])
([nil nil ((#("		firstSymbol := strings.Split(scanner.Text(), \" \")[0]
		returnPosts = append(returnsts, post{Title: \"\", Body: \"\"})
" 0 2 (fontified t) 2 13 (fontified t face font-lock-variable-name-face) 13 25 (fontified t) 25 30 (fontified t face font-lock-function-name-face) 30 39 (fontified t) 39 43 (fontified t face font-lock-function-name-face) 43 47 (fontified t) 47 50 (fontified t face font-lock-string-face) 50 55 (fontified t) 55 71 (fontified t) 71 77 (fontified t face font-lock-builtin-face) 77 89 (fontified t) 89 93 (fontified t face font-lock-type-face) 93 94 (fontified t) 94 99 (fontified t face font-lock-constant-face) 99 101 (fontified t) 101 103 (fontified t face font-lock-string-face) 103 105 (fontified t) 105 109 (fontified t face font-lock-constant-face) 109 111 (fontified t) 111 113 (fontified t face font-lock-string-face) 113 116 (fontified t)) . 410) (undo-tree-id49 . -84) (undo-tree-id50 . -84) (undo-tree-id51 . -84) (undo-tree-id52 . 32) (undo-tree-id53 . -84) (undo-tree-id54 . -84) (undo-tree-id55 . -84) 494) nil (25213 20981 518996 246000) 0 nil])
([nil nil ((410 . 526)) nil (25213 20981 518991 811000) 0 nil])
([nil nil ((#("		returnPosts = append(returnsts, post{Title: \"\", Body: \"\"})
" 0 16 (fontified t) 16 22 (fontified t face font-lock-builtin-face) 22 34 (fontified t) 34 38 (fontified t face font-lock-type-face) 38 39 (fontified t) 39 44 (fontified t face font-lock-constant-face) 44 46 (fontified t) 46 48 (fontified t face font-lock-string-face) 48 50 (fontified t) 50 54 (fontified t face font-lock-constant-face) 54 56 (fontified t) 56 58 (fontified t face font-lock-string-face) 58 61 (fontified t)) . 465) (undo-tree-id42 . -29) (undo-tree-id43 . -29) (undo-tree-id44 . -29) (undo-tree-id45 . 32) (undo-tree-id46 . -29) (undo-tree-id47 . -29) (undo-tree-id48 . -29) 494) nil (25213 20981 518991 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 389 . 390) (#("
" 0 1 (fontified nil)) . -448) (387 . 449) 386) nil (25213 20981 518986 743000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -389) (undo-tree-id39 . -1) (389 . 390) (388 . 389) (#("	" 0 1 (fontified t)) . -388) (undo-tree-id40 . -1) (#("	" 0 1 (fontified t rear-nonsticky t)) . -389) (undo-tree-id41 . -1) 390) nil (25213 20981 518985 442000) 0 nil])
([nil nil ((388 . 390) (#("	" 0 1 (fontified nil)) . 388) (#("j" 0 1 (fontified nil)) . 389) (389 . 390) (t 25213 20619 876903 723000)) nil (25213 20981 518982 407000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 389) (388 . 390) (#("		" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . 388)) nil (25213 20981 518981 495000) 0 nil])
([nil nil ((388 . 390) (#("	j" 0 1 (fontified nil) 1 2 (fontified nil)) . 388) (389 . 390) (t 25213 20619 876903 723000)) nil (25213 20981 518980 905000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 389) (388 . 390) (#("		" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . 388)) nil (25213 20981 518980 102000) 0 nil])
([nil nil ((388 . 390) (#("	j" 0 1 (fontified nil) 1 2 (fontified nil)) . 388) (undo-tree-id38 . -1) (389 . 390) (t 25213 20619 876903 723000)) nil (25213 20981 518979 159000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 389) (388 . 390) (#("		" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . 388)) nil (25213 20981 518977 555000) 0 nil])
([nil nil ((388 . 390) (#("	j" 0 1 (fontified nil) 1 2 (fontified nil)) . 388) (undo-tree-id37 . -1) (389 . 390) (t 25213 20619 876903 723000)) nil (25213 20981 518976 755000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 389) (388 . 390) (#("		" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . 388)) nil (25213 20981 518967 74000) 0 nil])
([nil nil ((388 . 390) (#("	j" 0 1 (fontified nil) 1 2 (fontified nil)) . 388) (undo-tree-id36 . -1) (389 . 390) (t 25213 20619 876903 723000)) nil (25213 20981 518966 413000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . 389) (388 . 390) (#("		" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . 388)) nil (25213 20981 518965 29000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -421) (undo-tree-id23 . -1) (421 . 422) (416 . 421) (#("p" 0 1 (fontified t)) . -416) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("o" 0 1 (fontified t)) . -417) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 418 (416 . 418) (#("s" 0 1 (fontified t)) . -416) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("t" 0 1 (fontified t)) . -417) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("s" 0 1 (fontified t)) . -418) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 419 (t 25213 20619 876903 723000)) nil (25213 20981 518963 777000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -865) (undo-tree-id16 . -1) (865 . 866) (#("f" 0 1 (fontified t)) . -865) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("j" 0 1 (fontified t)) . -866) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("i" 0 1 (fontified t)) . -867) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 868 (867 . 868) (866 . 867) (859 . 866) (857 . 859) (850 . 857) (t 25213 20645 372989 910000)) nil (25213 20981 518955 532000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -862) (undo-tree-id9 . -1) (862 . 863) (#("a" 0 1 (fontified t)) . -862) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("d" 0 1 (fontified t)) . -863) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("s" 0 1 (fontified t)) . -864) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 865) nil (25213 20981 518950 416000) 0 nil])
([nil nil ((862 . 865) (#("j" 0 1 (fontified nil)) . 862) (862 . 863)) nil (25213 20981 518945 767000) 0 nil])
([nil nil ((#("asdfdsf" 0 7 (fontified nil)) . 850) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (#("

" 0 1 (fontified t) 1 2 (fontified t)) . 857) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (#("asdadsf" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil)) . 859) (undo-tree-id5 . -5) (undo-tree-id6 . -7) (#("j" 0 1 (fontified nil)) . 866) (undo-tree-id7 . -1) (#("i" 0 1 (fontified nil)) . 867) (undo-tree-id8 . -1) (865 . 868) (#("j" 0 1 (fontified nil)) . 865) (865 . 866)) nil (25213 20981 518944 332000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -645) (undo-tree-id0 . -1) (645 . 646) (643 . 645) (642 . 644) (639 . 642) (t 25213 20645 372989 910000)) nil (25213 20981 518936 22000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -506) (undo-tree-id59 . -1) (506 . 507) (505 . 506) (503 . 505) (#("," 0 1 (fontified t)) . -503) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 504 (489 . 504) (#("]" 0 1 (fontified t)) . -489) (undo-tree-id62 . -1) (undo-tree-id63 . 1) (undo-tree-id64 . -1) 490 (#("s" 0 1 (fontified t)) . -489) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("t" 0 1 (fontified t)) . -490) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("r" 0 1 (fontified t)) . -491) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("i" 0 1 (fontified t)) . -492) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("n" 0 1 (fontified t)) . -493) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("g" 0 1 (fontified t)) . -494) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("s" 0 1 (fontified t)) . -495) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("." 0 1 (fontified t)) . -496) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("S" 0 1 (fontified t)) . -497) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("p" 0 1 (fontified t)) . -498) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("l" 0 1 (fontified t)) . -499) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("i" 0 1 (fontified t)) . -500) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("t" 0 1 (fontified t)) . -501) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) 502 (#("(" 0 1 (fontified t)) . -502) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . 1) (undo-tree-id139 . -1) (#("s" 0 1 (fontified t)) . -503) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("c" 0 1 (fontified t)) . -504) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("a" 0 1 (fontified t)) . -505) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("n" 0 1 (fontified t)) . -506) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("n" 0 1 (fontified t)) . -507) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("e" 0 1 (fontified t)) . -508) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("r" 0 1 (fontified t)) . -509) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("." 0 1 (fontified t)) . -510) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("T" 0 1 (fontified t)) . -511) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("e" 0 1 (fontified t)) . -512) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("x" 0 1 (fontified t)) . -513) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("t" 0 1 (fontified t)) . -514) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("(" 0 1 (fontified t)) . -515) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#(")" 0 1 (fontified t)) . -516) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#("," 0 1 (fontified t)) . -517) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#(" " 0 1 (fontified t)) . -518) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -519) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -520) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -521) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#(")" 0 1 (fontified t)) . -522) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . 1) (undo-tree-id240 . -1) 523 (#("[" 0 1 (fontified t)) . -523) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("0" 0 1 (fontified t)) . -524) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 525 (t 25213 20981 538050 681000)) nil (25213 21138 779372 556000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -503) (undo-tree-id248 . -1) (503 . 504) (501 . 503) (t 25213 21138 793788 203000)) nil (25213 21160 297636 828000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -511) (undo-tree-id249 . -1) (511 . 512) (#(";" 0 1 (fontified t)) . -511) (undo-tree-id250 . -1) (undo-tree-id251 . -1) 512 (503 . 512) (500 . 503) (501 . 503) (#("			" 0 3 (fontified nil)) . 500) (500 . 503) (#("		" 0 2 (fontified nil)) . -500) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (502 . 503) (500 . 502) (#("			" 0 3 (fontified nil)) . -500) (undo-tree-id254 . -3) (503 . 504) (499 . 503) (489 . 499) (#(" " 0 1 (fontified t)) . -489) (undo-tree-id255 . -1) (#(">" 0 1 (fontified t)) . -490) (undo-tree-id256 . -1) (#(" " 0 1 (fontified t)) . -491) (undo-tree-id257 . -1) 492 (490 . 492) (#("(" 0 1 (fontified t)) . -490) (undo-tree-id258 . -1) 491 (485 . 491) (#("t" 0 1 (fontified t)) . -485) (undo-tree-id259 . -1) 486 (478 . 486) (#("a" 0 1 (fontified t)) . -478) (undo-tree-id260 . -1) 479 (474 . 479) (471 . 474) (t 25213 21160 309767 685000)) nil (25213 21207 598114 276000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -500) (undo-tree-id261 . -1) (500 . 501) (497 . 500) (#("!" 0 1 (fontified t face font-lock-negation-char-face)) . -497) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("=" 0 1 (fontified t)) . -498) (undo-tree-id264 . -1) (#(" " 0 1 (fontified t)) . -499) (undo-tree-id265 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -500) (undo-tree-id266 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -501) (undo-tree-id267 . -1) 502 (495 . 496) (477 . 481) (t 25213 21207 605733 787000)) nil (25213 21251 47375 564000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -500) (undo-tree-id268 . -1) (500 . 501) (497 . 500) (#(">" 0 1 (fontified t)) . -497) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#(" " 0 1 (fontified t)) . -498) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("0" 0 1 (fontified t)) . -499) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("i" 0 1 (fontified t)) . -500) (undo-tree-id284 . -1) (undo-tree-id285 . -1) 501 (500 . 501) (#("o" 0 1 (fontified t)) . -521) (undo-tree-id286 . -1) (undo-tree-id287 . -1) 522 (521 . 522) (518 . 521) (t 25213 21251 65715 259000) 517) nil (25213 21368 707270 211000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -501) (undo-tree-id288 . -1) (501 . 502) (500 . 501) (#("1" 0 1 (fontified t)) . -500) (undo-tree-id289 . -1) (undo-tree-id290 . -1) 501 (497 . 501) (#("<" 0 1 (fontified t)) . -497) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (#(" " 0 1 (fontified t)) . -498) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("1" 0 1 (fontified t)) . -499) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 500 (t 25213 21368 717718 169000)) nil (25213 21376 527779 343000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -793) (undo-tree-id301 . -1) (793 . 794) (786 . 793) (t 25213 21376 541720 823000)) nil (25213 21410 345480 420000) 0 nil])
([nil nil ((nil rear-nonsticky nil 450 . 451) (#("
" 0 1 (fontified nil)) . -471) (449 . 472) 405 (t 25213 21410 381735 489000)) nil (25213 21603 596854 922000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -452) (undo-tree-id324 . -1) (452 . 453) (472 . 473) (#("		" 0 2 (fontified nil)) . -472) (undo-tree-id325 . -2) (474 . 475) (471 . 474) (#("¨" 0 1 (fontified t)) . -471) (undo-tree-id326 . -1) 472 (471 . 472)) nil (25213 21603 596853 830000) 0 nil])
([nil nil ((#("	for scanner.Scan() {
" 0 1 (fontified t rear-nonsticky t) 1 2 (fontified t face font-lock-keyword-face) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 13 (fontified t) 13 17 (fontified t face font-lock-function-name-face) 17 22 (fontified t)) . 450) (undo-tree-id320 . -21) (undo-tree-id321 . -21) (undo-tree-id322 . 20) (undo-tree-id323 . -1) 451) nil (25213 21603 596851 65000) 0 nil])
([nil nil ((#("	}
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 450) (undo-tree-id315 . 3) (undo-tree-id316 . -1) (undo-tree-id317 . -2) (undo-tree-id318 . 2) (undo-tree-id319 . -2) 451) nil (25213 21603 596848 537000) 0 nil])
([nil nil ((#("	returnPosts = append(returnPosts, post{Title: \"\", Body: \"\"})
" 0 1 (fontified t) 1 15 (fontified t) 15 21 (fontified t face font-lock-builtin-face) 21 22 (fontified t) 22 33 (fontified t) 33 35 (fontified t) 35 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 45 (fontified t face font-lock-constant-face) 45 47 (fontified t) 47 49 (fontified t face font-lock-string-face) 49 51 (fontified t) 51 55 (fontified t face font-lock-constant-face) 55 57 (fontified t) 57 59 (fontified t face font-lock-string-face) 59 61 (fontified t) 61 62 (fontified t)) . 388) (undo-tree-id304 . -62) (undo-tree-id305 . -62) (undo-tree-id306 . -62) (undo-tree-id307 . -32) (undo-tree-id308 . -32) (undo-tree-id309 . -32) (undo-tree-id310 . -28) (undo-tree-id311 . -32) (undo-tree-id312 . -14) (undo-tree-id313 . -14) (undo-tree-id314 . -14) 402) nil (25213 21603 596845 13000) 0 nil])
([nil nil ((nil rear-nonsticky nil 618 . 619) (#("
" 0 1 (fontified nil)) . -679) (617 . 680) 527) nil (25213 21603 596837 871000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -621) (undo-tree-id302 . -1) (621 . 622) (618 . 621) (#("	" 0 1 (fontified t rear-nonsticky t)) . -618) (undo-tree-id303 . -1) 619) nil (25213 21603 596834 446000) 0 nil])
([nil nil ((nil rear-nonsticky nil 460 . 461) (#("
" 0 1 (fontified nil)) . -521) (457 . 522) 456 (t 25213 21603 709904 632000)) nil (25213 21617 41619 369000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -460) (undo-tree-id327 . -1) (460 . 461) (#("	" 0 1 (fontified t rear-nonsticky t)) . -460) (undo-tree-id328 . -1) 461) nil (25213 21617 41615 667000) 0 nil])
([nil nil ((#("		returnPosts = append(returnPosts, post{Title: \"\", Body: \"\"})
" 0 2 (fontified t) 2 16 (fontified t) 16 22 (fontified t face font-lock-builtin-face) 22 23 (fontified t) 23 34 (fontified t) 34 36 (fontified t) 36 40 (fontified t face font-lock-type-face) 40 41 (fontified t) 41 46 (fontified t face font-lock-constant-face) 46 48 (fontified t) 48 50 (fontified t face font-lock-string-face) 50 52 (fontified t) 52 56 (fontified t face font-lock-constant-face) 56 58 (fontified t) 58 60 (fontified t face font-lock-string-face) 60 62 (fontified t) 62 63 (fontified t)) . 458) (undo-tree-id333 . -20) (undo-tree-id334 . -62) (undo-tree-id335 . 61) (undo-tree-id336 . -20) (undo-tree-id337 . -20) (undo-tree-id338 . -20) 478 (t 25213 21617 57920 899000)) nil (25213 21777 661787 571000) 0 nil])
([nil nil ((#("			returnPosts = append(returnPosts, post{Title: \"\", Body: \"\"})
" 0 3 (fontified t) 3 17 (fontified t) 17 23 (fontified t face font-lock-builtin-face) 23 24 (fontified t) 24 35 (fontified t) 35 37 (fontified t) 37 41 (fontified t face font-lock-type-face) 41 42 (fontified t) 42 47 (fontified t face font-lock-constant-face) 47 49 (fontified t) 49 51 (fontified t face font-lock-string-face) 51 53 (fontified t) 53 57 (fontified t face font-lock-constant-face) 57 59 (fontified t) 59 61 (fontified t face font-lock-string-face) 61 63 (fontified t) 63 64 (fontified t)) . 618) (undo-tree-id329 . -17) (undo-tree-id330 . -17) (undo-tree-id331 . -17) (undo-tree-id332 . -17) 635) nil (25213 21777 661783 245000) 0 nil])
([nil current ((nil rear-nonsticky nil 526 . 527) (#("
" 0 1 (fontified nil)) . -587) (523 . 588) 507) nil (25213 21777 661772 129000) 0 nil])
nil
